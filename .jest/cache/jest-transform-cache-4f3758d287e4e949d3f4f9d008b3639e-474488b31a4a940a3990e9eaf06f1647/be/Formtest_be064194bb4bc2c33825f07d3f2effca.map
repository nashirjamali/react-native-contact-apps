{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","useIsFocused","fn","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_Form","_testUtils","_jsxRuntime","_require","createTestProps","props","navigation","navigate","describe","test","default","_renderWithProviders","renderWithProviders","jsx","route","key","name","params","isEdit","getByPlaceholderText","getByText","getByLabelText","firstNameInput","lastNameInput","ageInput","nextButton","waitFor","fireEvent","changeText","console","log","expect","value","toBe","accessibilityState","disabled"],"sources":["Form.test.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  render,\n  fireEvent,\n  screen,\n  waitFor,\n} from '@testing-library/react-native';\nimport {Provider} from 'react-redux';\nimport Form from '../Form';\nimport {renderWithProviders} from '../../utils/test-utils';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport {RootStackParamList} from '../../types';\n\njest.mock('@react-navigation/native', () => ({\n  ...jest.requireActual('@react-navigation/native'),\n  useIsFocused: jest.fn(),\n}));\n\ntype NavigationProps = StackNavigationProp<RootStackParamList, 'Form'>;\n\nconst createTestProps = (props: Partial<NavigationProps>) => ({\n  navigation: {\n    navigate: jest.fn(),\n    ...props,\n  } as NavigationProps,\n  ...props,\n});\n\ndescribe('Form', () => {\n  test('renders correctly and enables next button when form is complete', async () => {\n    const props = createTestProps({});\n    const {getByPlaceholderText, getByText, getByLabelText} =\n      renderWithProviders(\n        <Form\n          route={{key: 'Form', name: 'Form', params: {isEdit: false}}}\n          {...props}\n        />,\n      );\n\n    const firstNameInput = getByPlaceholderText('First Name');\n    const lastNameInput = getByPlaceholderText('Last Name');\n    const ageInput = getByPlaceholderText('Age');\n    const nextButton = getByLabelText('button-next');\n\n    await waitFor(() => {\n      fireEvent.changeText(firstNameInput, 'John');\n      fireEvent.changeText(lastNameInput, 'Doe');\n      fireEvent.changeText(ageInput, '30');\n    });\n\n    console.log(nextButton.props);\n\n    expect(firstNameInput.props.value).toBe('John');\n    expect(lastNameInput.props.value).toBe('Doe');\n    expect(ageInput.props.value).toBe('30');\n    expect(nextButton.props.accessibilityState.disabled).toBe(false);\n  });\n\n  //   test('navigates to ChooseAvatar screen when Next button is clicked', () => {\n  //     const navigationMock = {\n  //       navigate: jest.fn(),\n  //     };\n\n  //     const {getByPlaceholderText, getByText, getByTestId} = render(\n  //       <Provider store={store}>\n  //         <Form route={{params: {isEdit: false}}} navigation={navigationMock} />\n  //       </Provider>,\n  //     );\n\n  //     const firstNameInput = getByPlaceholderText('First Name');\n  //     const lastNameInput = getByPlaceholderText('Last Name');\n  //     const ageInput = getByPlaceholderText('Age');\n  //     const nextButton = getByText('Next');\n\n  //     fireEvent.changeText(firstNameInput, 'John');\n  //     fireEvent.changeText(lastNameInput, 'Doe');\n  //     fireEvent.changeText(ageInput, '30');\n  //     fireEvent.press(nextButton);\n\n  //     expect(navigationMock.navigate).toHaveBeenCalledWith('ChooseAvatar', {\n  //       isEdit: false,\n  //     });\n  //   });\n});\n"],"mappings":"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"}