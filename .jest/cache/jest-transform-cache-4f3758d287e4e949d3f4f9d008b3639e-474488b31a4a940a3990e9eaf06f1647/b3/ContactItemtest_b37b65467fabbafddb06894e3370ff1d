c1fc1083fb261097a91edd9a5d3da8f9
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _ContactItem = _interopRequireDefault(require("../ContactItem"));
var _jsxRuntime = require("react/jsx-runtime");
describe('ContactItem', function () {
  var contact = {
    firstName: 'John',
    lastName: 'Doe',
    photo: 'https://example.com/avatar.png',
    age: 2,
    id: '111'
  };
  afterEach(function () {
    jest.clearAllMocks();
  });
  test('renders correctly with contact data', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ContactItem.default, {
        contact: contact
      })),
      getByText = _render.getByText,
      getByTestId = _render.getByTestId;
    var avatar = getByTestId('user-avatar-text');
    var name = getByText('John Doe');
    expect(avatar.props.children.props.children).toBe('JD');
    expect(name).toBeTruthy();
  });
  test('calls onPress when pressed', function () {
    var onPressMock = jest.fn();
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_ContactItem.default, {
        contact: contact,
        onPress: onPressMock
      })),
      getByTestId = _render2.getByTestId;
    var touchable = getByTestId('user-avatar-text');
    _reactNative.fireEvent.press(touchable);
    expect(onPressMock).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9Db250YWN0SXRlbSIsIl9qc3hSdW50aW1lIiwiZGVzY3JpYmUiLCJjb250YWN0IiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJwaG90byIsImFnZSIsImlkIiwiYWZ0ZXJFYWNoIiwiamVzdCIsImNsZWFyQWxsTW9ja3MiLCJ0ZXN0IiwiX3JlbmRlciIsInJlbmRlciIsImpzeCIsImRlZmF1bHQiLCJnZXRCeVRleHQiLCJnZXRCeVRlc3RJZCIsImF2YXRhciIsIm5hbWUiLCJleHBlY3QiLCJwcm9wcyIsImNoaWxkcmVuIiwidG9CZSIsInRvQmVUcnV0aHkiLCJvblByZXNzTW9jayIsImZuIiwiX3JlbmRlcjIiLCJvblByZXNzIiwidG91Y2hhYmxlIiwiZmlyZUV2ZW50IiwicHJlc3MiLCJ0b0hhdmVCZWVuQ2FsbGVkIl0sInNvdXJjZXMiOlsiQ29udGFjdEl0ZW0udGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7cmVuZGVyLCBmaXJlRXZlbnR9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcbmltcG9ydCBDb250YWN0SXRlbSBmcm9tICcuLi9Db250YWN0SXRlbSc7XG5cbmRlc2NyaWJlKCdDb250YWN0SXRlbScsICgpID0+IHtcbiAgY29uc3QgY29udGFjdCA9IHtcbiAgICBmaXJzdE5hbWU6ICdKb2huJyxcbiAgICBsYXN0TmFtZTogJ0RvZScsXG4gICAgcGhvdG86ICdodHRwczovL2V4YW1wbGUuY29tL2F2YXRhci5wbmcnLFxuICAgIGFnZTogMixcbiAgICBpZDogJzExMScsXG4gIH07XG5cbiAgYWZ0ZXJFYWNoKCgpID0+IHtcbiAgICBqZXN0LmNsZWFyQWxsTW9ja3MoKTtcbiAgfSk7XG5cbiAgdGVzdCgncmVuZGVycyBjb3JyZWN0bHkgd2l0aCBjb250YWN0IGRhdGEnLCAoKSA9PiB7XG4gICAgY29uc3Qge2dldEJ5VGV4dCwgZ2V0QnlUZXN0SWR9ID0gcmVuZGVyKDxDb250YWN0SXRlbSBjb250YWN0PXtjb250YWN0fSAvPik7XG5cbiAgICBjb25zdCBhdmF0YXIgPSBnZXRCeVRlc3RJZCgndXNlci1hdmF0YXItdGV4dCcpO1xuICAgIGNvbnN0IG5hbWUgPSBnZXRCeVRleHQoJ0pvaG4gRG9lJyk7XG5cbiAgICBleHBlY3QoYXZhdGFyLnByb3BzLmNoaWxkcmVuLnByb3BzLmNoaWxkcmVuKS50b0JlKCdKRCcpO1xuICAgIGV4cGVjdChuYW1lKS50b0JlVHJ1dGh5KCk7XG4gIH0pO1xuXG4gIHRlc3QoJ2NhbGxzIG9uUHJlc3Mgd2hlbiBwcmVzc2VkJywgKCkgPT4ge1xuICAgIGNvbnN0IG9uUHJlc3NNb2NrID0gamVzdC5mbigpO1xuICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoXG4gICAgICA8Q29udGFjdEl0ZW0gY29udGFjdD17Y29udGFjdH0gb25QcmVzcz17b25QcmVzc01vY2t9IC8+LFxuICAgICk7XG5cbiAgICBjb25zdCB0b3VjaGFibGUgPSBnZXRCeVRlc3RJZCgndXNlci1hdmF0YXItdGV4dCcpO1xuICAgIGZpcmVFdmVudC5wcmVzcyh0b3VjaGFibGUpO1xuXG4gICAgZXhwZWN0KG9uUHJlc3NNb2NrKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxZQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFBeUMsSUFBQUcsV0FBQSxHQUFBSCxPQUFBO0FBRXpDSSxRQUFRLENBQUMsYUFBYSxFQUFFLFlBQU07RUFDNUIsSUFBTUMsT0FBTyxHQUFHO0lBQ2RDLFNBQVMsRUFBRSxNQUFNO0lBQ2pCQyxRQUFRLEVBQUUsS0FBSztJQUNmQyxLQUFLLEVBQUUsZ0NBQWdDO0lBQ3ZDQyxHQUFHLEVBQUUsQ0FBQztJQUNOQyxFQUFFLEVBQUU7RUFDTixDQUFDO0VBRURDLFNBQVMsQ0FBQyxZQUFNO0lBQ2RDLElBQUksQ0FBQ0MsYUFBYSxDQUFDLENBQUM7RUFDdEIsQ0FBQyxDQUFDO0VBRUZDLElBQUksQ0FBQyxxQ0FBcUMsRUFBRSxZQUFNO0lBQ2hELElBQUFDLE9BQUEsR0FBaUMsSUFBQUMsbUJBQU0sRUFBQyxJQUFBYixXQUFBLENBQUFjLEdBQUEsRUFBQ2YsWUFBQSxDQUFBZ0IsT0FBVztRQUFDYixPQUFPLEVBQUVBO01BQVEsQ0FBRSxDQUFDLENBQUM7TUFBbkVjLFNBQVMsR0FBQUosT0FBQSxDQUFUSSxTQUFTO01BQUVDLFdBQVcsR0FBQUwsT0FBQSxDQUFYSyxXQUFXO0lBRTdCLElBQU1DLE1BQU0sR0FBR0QsV0FBVyxDQUFDLGtCQUFrQixDQUFDO0lBQzlDLElBQU1FLElBQUksR0FBR0gsU0FBUyxDQUFDLFVBQVUsQ0FBQztJQUVsQ0ksTUFBTSxDQUFDRixNQUFNLENBQUNHLEtBQUssQ0FBQ0MsUUFBUSxDQUFDRCxLQUFLLENBQUNDLFFBQVEsQ0FBQyxDQUFDQyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3ZESCxNQUFNLENBQUNELElBQUksQ0FBQyxDQUFDSyxVQUFVLENBQUMsQ0FBQztFQUMzQixDQUFDLENBQUM7RUFFRmIsSUFBSSxDQUFDLDRCQUE0QixFQUFFLFlBQU07SUFDdkMsSUFBTWMsV0FBVyxHQUFHaEIsSUFBSSxDQUFDaUIsRUFBRSxDQUFDLENBQUM7SUFDN0IsSUFBQUMsUUFBQSxHQUFzQixJQUFBZCxtQkFBTSxFQUMxQixJQUFBYixXQUFBLENBQUFjLEdBQUEsRUFBQ2YsWUFBQSxDQUFBZ0IsT0FBVztRQUFDYixPQUFPLEVBQUVBLE9BQVE7UUFBQzBCLE9BQU8sRUFBRUg7TUFBWSxDQUFFLENBQ3hELENBQUM7TUFGTVIsV0FBVyxHQUFBVSxRQUFBLENBQVhWLFdBQVc7SUFJbEIsSUFBTVksU0FBUyxHQUFHWixXQUFXLENBQUMsa0JBQWtCLENBQUM7SUFDakRhLHNCQUFTLENBQUNDLEtBQUssQ0FBQ0YsU0FBUyxDQUFDO0lBRTFCVCxNQUFNLENBQUNLLFdBQVcsQ0FBQyxDQUFDTyxnQkFBZ0IsQ0FBQyxDQUFDO0VBQ3hDLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9