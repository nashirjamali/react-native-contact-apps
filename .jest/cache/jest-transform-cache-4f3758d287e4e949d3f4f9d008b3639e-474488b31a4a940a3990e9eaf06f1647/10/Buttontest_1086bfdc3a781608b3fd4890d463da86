70139105172561856ef60a1f48d3d696
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _Button = _interopRequireDefault(require("../Button"));
var _jsxRuntime = require("react/jsx-runtime");
describe('Button', function () {
  test('renders correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Button.default, {
        "aria-label": "button"
      })),
      getByLabelText = _render.getByLabelText;
    var button = getByLabelText('button');
    expect(button).toBeTruthy();
  });
  test('executes onPress callback when pressed', function () {
    var onPressMock = jest.fn();
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Button.default, {
        "aria-label": "button",
        onPress: onPressMock
      })),
      getByLabelText = _render2.getByLabelText;
    var button = getByLabelText('button');
    _reactNative.fireEvent.press(button);
    expect(onPressMock).toHaveBeenCalledTimes(1);
  });
  test('applies disabled style when disabled prop is true', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_Button.default, {
        "aria-label": "button",
        disabled: true
      })),
      getByLabelText = _render3.getByLabelText;
    var button = getByLabelText('button');
    expect(button.props.style[1]).toEqual({
      backgroundColor: '#3f3f46'
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9CdXR0b24iLCJfanN4UnVudGltZSIsImRlc2NyaWJlIiwidGVzdCIsIl9yZW5kZXIiLCJyZW5kZXIiLCJqc3giLCJkZWZhdWx0IiwiZ2V0QnlMYWJlbFRleHQiLCJidXR0b24iLCJleHBlY3QiLCJ0b0JlVHJ1dGh5Iiwib25QcmVzc01vY2siLCJqZXN0IiwiZm4iLCJfcmVuZGVyMiIsIm9uUHJlc3MiLCJmaXJlRXZlbnQiLCJwcmVzcyIsInRvSGF2ZUJlZW5DYWxsZWRUaW1lcyIsIl9yZW5kZXIzIiwiZGlzYWJsZWQiLCJwcm9wcyIsInN0eWxlIiwidG9FcXVhbCIsImJhY2tncm91bmRDb2xvciJdLCJzb3VyY2VzIjpbIkJ1dHRvbi50ZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtyZW5kZXIsIGZpcmVFdmVudCwgc2NyZWVufSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgQnV0dG9uIGZyb20gJy4uL0J1dHRvbic7XG5cbmltcG9ydCByZW5kZXJlciBmcm9tICdyZWFjdC10ZXN0LXJlbmRlcmVyJztcblxuZGVzY3JpYmUoJ0J1dHRvbicsICgpID0+IHtcbiAgdGVzdCgncmVuZGVycyBjb3JyZWN0bHknLCAoKSA9PiB7XG4gICAgY29uc3Qge2dldEJ5TGFiZWxUZXh0fSA9IHJlbmRlcig8QnV0dG9uIGFyaWEtbGFiZWw9XCJidXR0b25cIiAvPik7XG4gICAgY29uc3QgYnV0dG9uID0gZ2V0QnlMYWJlbFRleHQoJ2J1dHRvbicpO1xuICAgIGV4cGVjdChidXR0b24pLnRvQmVUcnV0aHkoKTtcbiAgfSk7XG5cbiAgdGVzdCgnZXhlY3V0ZXMgb25QcmVzcyBjYWxsYmFjayB3aGVuIHByZXNzZWQnLCAoKSA9PiB7XG4gICAgY29uc3Qgb25QcmVzc01vY2sgPSBqZXN0LmZuKCk7XG4gICAgY29uc3Qge2dldEJ5TGFiZWxUZXh0fSA9IHJlbmRlcihcbiAgICAgIDxCdXR0b24gYXJpYS1sYWJlbD1cImJ1dHRvblwiIG9uUHJlc3M9e29uUHJlc3NNb2NrfSAvPixcbiAgICApO1xuICAgIGNvbnN0IGJ1dHRvbiA9IGdldEJ5TGFiZWxUZXh0KCdidXR0b24nKTtcbiAgICBmaXJlRXZlbnQucHJlc3MoYnV0dG9uKTtcbiAgICBleHBlY3Qob25QcmVzc01vY2spLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKTtcbiAgfSk7XG5cbiAgdGVzdCgnYXBwbGllcyBkaXNhYmxlZCBzdHlsZSB3aGVuIGRpc2FibGVkIHByb3AgaXMgdHJ1ZScsICgpID0+IHtcbiAgICBjb25zdCB7Z2V0QnlMYWJlbFRleHR9ID0gcmVuZGVyKDxCdXR0b24gYXJpYS1sYWJlbD1cImJ1dHRvblwiIGRpc2FibGVkIC8+KTtcbiAgICBjb25zdCBidXR0b24gPSBnZXRCeUxhYmVsVGV4dCgnYnV0dG9uJyk7XG4gICAgZXhwZWN0KGJ1dHRvbi5wcm9wcy5zdHlsZVsxXSkudG9FcXVhbCh7YmFja2dyb3VuZENvbG9yOiAnIzNmM2Y0Nid9KTtcbiAgfSk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLE9BQUEsR0FBQUgsc0JBQUEsQ0FBQUMsT0FBQTtBQUErQixJQUFBRyxXQUFBLEdBQUFILE9BQUE7QUFJL0JJLFFBQVEsQ0FBQyxRQUFRLEVBQUUsWUFBTTtFQUN2QkMsSUFBSSxDQUFDLG1CQUFtQixFQUFFLFlBQU07SUFDOUIsSUFBQUMsT0FBQSxHQUF5QixJQUFBQyxtQkFBTSxFQUFDLElBQUFKLFdBQUEsQ0FBQUssR0FBQSxFQUFDTixPQUFBLENBQUFPLE9BQU07UUFBQyxjQUFXO01BQVEsQ0FBRSxDQUFDLENBQUM7TUFBeERDLGNBQWMsR0FBQUosT0FBQSxDQUFkSSxjQUFjO0lBQ3JCLElBQU1DLE1BQU0sR0FBR0QsY0FBYyxDQUFDLFFBQVEsQ0FBQztJQUN2Q0UsTUFBTSxDQUFDRCxNQUFNLENBQUMsQ0FBQ0UsVUFBVSxDQUFDLENBQUM7RUFDN0IsQ0FBQyxDQUFDO0VBRUZSLElBQUksQ0FBQyx3Q0FBd0MsRUFBRSxZQUFNO0lBQ25ELElBQU1TLFdBQVcsR0FBR0MsSUFBSSxDQUFDQyxFQUFFLENBQUMsQ0FBQztJQUM3QixJQUFBQyxRQUFBLEdBQXlCLElBQUFWLG1CQUFNLEVBQzdCLElBQUFKLFdBQUEsQ0FBQUssR0FBQSxFQUFDTixPQUFBLENBQUFPLE9BQU07UUFBQyxjQUFXLFFBQVE7UUFBQ1MsT0FBTyxFQUFFSjtNQUFZLENBQUUsQ0FDckQsQ0FBQztNQUZNSixjQUFjLEdBQUFPLFFBQUEsQ0FBZFAsY0FBYztJQUdyQixJQUFNQyxNQUFNLEdBQUdELGNBQWMsQ0FBQyxRQUFRLENBQUM7SUFDdkNTLHNCQUFTLENBQUNDLEtBQUssQ0FBQ1QsTUFBTSxDQUFDO0lBQ3ZCQyxNQUFNLENBQUNFLFdBQVcsQ0FBQyxDQUFDTyxxQkFBcUIsQ0FBQyxDQUFDLENBQUM7RUFDOUMsQ0FBQyxDQUFDO0VBRUZoQixJQUFJLENBQUMsbURBQW1ELEVBQUUsWUFBTTtJQUM5RCxJQUFBaUIsUUFBQSxHQUF5QixJQUFBZixtQkFBTSxFQUFDLElBQUFKLFdBQUEsQ0FBQUssR0FBQSxFQUFDTixPQUFBLENBQUFPLE9BQU07UUFBQyxjQUFXLFFBQVE7UUFBQ2MsUUFBUTtNQUFBLENBQUUsQ0FBQyxDQUFDO01BQWpFYixjQUFjLEdBQUFZLFFBQUEsQ0FBZFosY0FBYztJQUNyQixJQUFNQyxNQUFNLEdBQUdELGNBQWMsQ0FBQyxRQUFRLENBQUM7SUFDdkNFLE1BQU0sQ0FBQ0QsTUFBTSxDQUFDYSxLQUFLLENBQUNDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDQyxPQUFPLENBQUM7TUFBQ0MsZUFBZSxFQUFFO0lBQVMsQ0FBQyxDQUFDO0VBQ3JFLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9