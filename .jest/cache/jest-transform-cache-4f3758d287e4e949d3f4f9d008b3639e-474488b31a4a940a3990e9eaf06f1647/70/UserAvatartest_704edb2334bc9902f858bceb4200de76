ab4867adbcac01eeca73042e16aba9c5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _UserAvatar = _interopRequireDefault(require("../UserAvatar"));
var _jsxRuntime = require("react/jsx-runtime");
describe('UserAvatar', function () {
  test('renders image if photo exists', (0, _asyncToGenerator2.default)(function* () {
    jest.spyOn(global, 'fetch').mockResolvedValueOnce(Promise.resolve({
      ok: true,
      status: 200
    }));
    var photo = 'https://example.com/avatar.jpg';
    (0, _reactNative.render)((0, _jsxRuntime.jsx)(_UserAvatar.default, {
      photo: photo,
      firstName: "John",
      lastName: "Doe"
    }));
    yield (0, _reactNative.waitFor)(function () {
      var image = _reactNative.screen.getByTestId('user-avatar-img');
      expect(image.props.source.uri).toBe(photo);
    });
  }));
  test('renders initials if photo is not found', (0, _asyncToGenerator2.default)(function* () {
    jest.spyOn(global, 'fetch').mockResolvedValueOnce(Promise.resolve({
      ok: true,
      status: 404
    }));
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_UserAvatar.default, {
        photo: "non-existing.jpg",
        firstName: "John",
        lastName: "Doe"
      })),
      getByTestId = _render.getByTestId;
    var textContainer = getByTestId('user-avatar-text');
    var initials = getByTestId('user-avatar-text').props.children.props.children;
    yield (0, _reactNative.waitFor)(function () {
      expect(textContainer).toBeTruthy();
      expect(initials).toBe('JD');
    });
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9Vc2VyQXZhdGFyIiwiX2pzeFJ1bnRpbWUiLCJkZXNjcmliZSIsInRlc3QiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0IiwiamVzdCIsInNweU9uIiwiZ2xvYmFsIiwibW9ja1Jlc29sdmVkVmFsdWVPbmNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJvayIsInN0YXR1cyIsInBob3RvIiwicmVuZGVyIiwianN4IiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJ3YWl0Rm9yIiwiaW1hZ2UiLCJzY3JlZW4iLCJnZXRCeVRlc3RJZCIsImV4cGVjdCIsInByb3BzIiwic291cmNlIiwidXJpIiwidG9CZSIsIl9yZW5kZXIiLCJ0ZXh0Q29udGFpbmVyIiwiaW5pdGlhbHMiLCJjaGlsZHJlbiIsInRvQmVUcnV0aHkiXSwic291cmNlcyI6WyJVc2VyQXZhdGFyLnRlc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge3JlbmRlciwgd2FpdEZvciwgc2NyZWVufSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgVXNlckF2YXRhciBmcm9tICcuLi9Vc2VyQXZhdGFyJztcblxuZGVzY3JpYmUoJ1VzZXJBdmF0YXInLCAoKSA9PiB7XG4gIHRlc3QoJ3JlbmRlcnMgaW1hZ2UgaWYgcGhvdG8gZXhpc3RzJywgYXN5bmMgKCkgPT4ge1xuICAgIGplc3RcbiAgICAgIC5zcHlPbihnbG9iYWwsICdmZXRjaCcpXG4gICAgICAubW9ja1Jlc29sdmVkVmFsdWVPbmNlKFxuICAgICAgICBQcm9taXNlLnJlc29sdmUoe29rOiB0cnVlLCBzdGF0dXM6IDIwMH0gYXMgUmVzcG9uc2UpLFxuICAgICAgKTtcblxuICAgIGNvbnN0IHBob3RvID0gJ2h0dHBzOi8vZXhhbXBsZS5jb20vYXZhdGFyLmpwZyc7XG5cbiAgICByZW5kZXIoPFVzZXJBdmF0YXIgcGhvdG89e3Bob3RvfSBmaXJzdE5hbWU9XCJKb2huXCIgbGFzdE5hbWU9XCJEb2VcIiAvPik7XG5cbiAgICBhd2FpdCB3YWl0Rm9yKCgpID0+IHtcbiAgICAgIGNvbnN0IGltYWdlID0gc2NyZWVuLmdldEJ5VGVzdElkKCd1c2VyLWF2YXRhci1pbWcnKTtcbiAgICAgIGV4cGVjdChpbWFnZS5wcm9wcy5zb3VyY2UudXJpKS50b0JlKHBob3RvKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgdGVzdCgncmVuZGVycyBpbml0aWFscyBpZiBwaG90byBpcyBub3QgZm91bmQnLCBhc3luYyAoKSA9PiB7XG4gICAgamVzdFxuICAgICAgLnNweU9uKGdsb2JhbCwgJ2ZldGNoJylcbiAgICAgIC5tb2NrUmVzb2x2ZWRWYWx1ZU9uY2UoXG4gICAgICAgIFByb21pc2UucmVzb2x2ZSh7b2s6IHRydWUsIHN0YXR1czogNDA0fSBhcyBSZXNwb25zZSksXG4gICAgICApO1xuXG4gICAgY29uc3Qge2dldEJ5VGVzdElkfSA9IHJlbmRlcihcbiAgICAgIDxVc2VyQXZhdGFyIHBob3RvPVwibm9uLWV4aXN0aW5nLmpwZ1wiIGZpcnN0TmFtZT1cIkpvaG5cIiBsYXN0TmFtZT1cIkRvZVwiIC8+LFxuICAgICk7XG4gICAgY29uc3QgdGV4dENvbnRhaW5lciA9IGdldEJ5VGVzdElkKCd1c2VyLWF2YXRhci10ZXh0Jyk7XG4gICAgY29uc3QgaW5pdGlhbHMgPVxuICAgICAgZ2V0QnlUZXN0SWQoJ3VzZXItYXZhdGFyLXRleHQnKS5wcm9wcy5jaGlsZHJlbi5wcm9wcy5jaGlsZHJlbjtcbiAgICBhd2FpdCB3YWl0Rm9yKCgpID0+IHtcbiAgICAgIGV4cGVjdCh0ZXh0Q29udGFpbmVyKS50b0JlVHJ1dGh5KCk7XG4gICAgICBleHBlY3QoaW5pdGlhbHMpLnRvQmUoJ0pEJyk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsV0FBQSxHQUFBSCxzQkFBQSxDQUFBQyxPQUFBO0FBQXVDLElBQUFHLFdBQUEsR0FBQUgsT0FBQTtBQUV2Q0ksUUFBUSxDQUFDLFlBQVksRUFBRSxZQUFNO0VBQzNCQyxJQUFJLENBQUMsK0JBQStCLE1BQUFDLGtCQUFBLENBQUFDLE9BQUEsRUFBRSxhQUFZO0lBQ2hEQyxJQUFJLENBQ0RDLEtBQUssQ0FBQ0MsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUN0QkMscUJBQXFCLENBQ3BCQyxPQUFPLENBQUNDLE9BQU8sQ0FBQztNQUFDQyxFQUFFLEVBQUUsSUFBSTtNQUFFQyxNQUFNLEVBQUU7SUFBRyxDQUFhLENBQ3JELENBQUM7SUFFSCxJQUFNQyxLQUFLLEdBQUcsZ0NBQWdDO0lBRTlDLElBQUFDLG1CQUFNLEVBQUMsSUFBQWQsV0FBQSxDQUFBZSxHQUFBLEVBQUNoQixXQUFBLENBQUFLLE9BQVU7TUFBQ1MsS0FBSyxFQUFFQSxLQUFNO01BQUNHLFNBQVMsRUFBQyxNQUFNO01BQUNDLFFBQVEsRUFBQztJQUFLLENBQUUsQ0FBQyxDQUFDO0lBRXBFLE1BQU0sSUFBQUMsb0JBQU8sRUFBQyxZQUFNO01BQ2xCLElBQU1DLEtBQUssR0FBR0MsbUJBQU0sQ0FBQ0MsV0FBVyxDQUFDLGlCQUFpQixDQUFDO01BQ25EQyxNQUFNLENBQUNILEtBQUssQ0FBQ0ksS0FBSyxDQUFDQyxNQUFNLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUNiLEtBQUssQ0FBQztJQUM1QyxDQUFDLENBQUM7RUFDSixDQUFDLEVBQUM7RUFFRlgsSUFBSSxDQUFDLHdDQUF3QyxNQUFBQyxrQkFBQSxDQUFBQyxPQUFBLEVBQUUsYUFBWTtJQUN6REMsSUFBSSxDQUNEQyxLQUFLLENBQUNDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FDdEJDLHFCQUFxQixDQUNwQkMsT0FBTyxDQUFDQyxPQUFPLENBQUM7TUFBQ0MsRUFBRSxFQUFFLElBQUk7TUFBRUMsTUFBTSxFQUFFO0lBQUcsQ0FBYSxDQUNyRCxDQUFDO0lBRUgsSUFBQWUsT0FBQSxHQUFzQixJQUFBYixtQkFBTSxFQUMxQixJQUFBZCxXQUFBLENBQUFlLEdBQUEsRUFBQ2hCLFdBQUEsQ0FBQUssT0FBVTtRQUFDUyxLQUFLLEVBQUMsa0JBQWtCO1FBQUNHLFNBQVMsRUFBQyxNQUFNO1FBQUNDLFFBQVEsRUFBQztNQUFLLENBQUUsQ0FDeEUsQ0FBQztNQUZNSSxXQUFXLEdBQUFNLE9BQUEsQ0FBWE4sV0FBVztJQUdsQixJQUFNTyxhQUFhLEdBQUdQLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQztJQUNyRCxJQUFNUSxRQUFRLEdBQ1pSLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDRSxLQUFLLENBQUNPLFFBQVEsQ0FBQ1AsS0FBSyxDQUFDTyxRQUFRO0lBQy9ELE1BQU0sSUFBQVosb0JBQU8sRUFBQyxZQUFNO01BQ2xCSSxNQUFNLENBQUNNLGFBQWEsQ0FBQyxDQUFDRyxVQUFVLENBQUMsQ0FBQztNQUNsQ1QsTUFBTSxDQUFDTyxRQUFRLENBQUMsQ0FBQ0gsSUFBSSxDQUFDLElBQUksQ0FBQztJQUM3QixDQUFDLENBQUM7RUFDSixDQUFDLEVBQUM7QUFDSixDQUFDLENBQUMifQ==