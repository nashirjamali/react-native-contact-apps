215c9f3e8efe13c072cbeaf2fd0388de
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = List;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _contact = require("../apis/contact");
var _Typography = _interopRequireDefault(require("../components/Typography"));
var _ContactItem = _interopRequireDefault(require("../components/ContactItem"));
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _lucideReactNative = require("lucide-react-native");
var _Button = _interopRequireDefault(require("../components/Button"));
var _native = require("@react-navigation/native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function List(_ref) {
  var navigation = _ref.navigation;
  var _useState = (0, _react.useState)([]),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    contacts = _useState2[0],
    setContacts = _useState2[1];
  var isFocused = (0, _native.useIsFocused)();
  function getContactData() {
    return _getContactData.apply(this, arguments);
  }
  function _getContactData() {
    _getContactData = (0, _asyncToGenerator2.default)(function* () {
      var _yield$getContacts = yield (0, _contact.getContacts)(),
        data = _yield$getContacts.data,
        status = _yield$getContacts.status;
      if (status === 200) {
        setContacts(data.data);
      } else {
        _reactNative.Alert.alert('Error', 'something went wrong');
      }
    });
    return _getContactData.apply(this, arguments);
  }
  (0, _react.useEffect)(function () {
    getContactData();
  }, [isFocused]);
  return (0, _jsxRuntime.jsxs)(_reactNativeSafeAreaContext.SafeAreaView, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.header,
      children: [(0, _jsxRuntime.jsx)(_Typography.default, {
        children: "Contact"
      }), (0, _jsxRuntime.jsx)(_Button.default, {
        onPress: function onPress() {
          return navigation.navigate('Form', {
            isEdit: false
          });
        },
        children: (0, _jsxRuntime.jsx)(_lucideReactNative.Plus, {
          color: "#fafafa",
          size: 20
        })
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
      style: styles.list,
      children: contacts.map(function (contact) {
        return (0, _jsxRuntime.jsx)(_ContactItem.default, {
          contact: contact,
          onPress: function onPress() {
            return navigation.navigate('Detail', {
              id: contact.id
            });
          }
        }, contact.id);
      })
    })]
  });
}
var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#18181b'
  },
  header: {
    backgroundColor: '#09090b',
    padding: 20,
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center'
  },
  list: {
    paddingTop: 20,
    flex: 1
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,