9602368a9ba73079c2b763ef32c1b967
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = UserAvatar;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _Typography = _interopRequireDefault(require("./Typography"));
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function UserAvatar(_ref) {
  var photo = _ref.photo,
    firstName = _ref.firstName,
    lastName = _ref.lastName,
    size = _ref.size;
  var _useState = (0, _react.useState)(true),
    _useState2 = (0, _slicedToArray2.default)(_useState, 2),
    notFound = _useState2[0],
    setNotFound = _useState2[1];
  var initials = (firstName.charAt(0) + lastName.charAt(0)).toUpperCase();
  (0, _react.useEffect)(function () {
    function fetchImageURL() {
      return _fetchImageURL.apply(this, arguments);
    }
    function _fetchImageURL() {
      _fetchImageURL = (0, _asyncToGenerator2.default)(function* () {
        var response = yield fetch(photo);
        if (response.status === 200) {
          setNotFound(false);
        }
      });
      return _fetchImageURL.apply(this, arguments);
    }
    fetchImageURL();
  }, [photo]);
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    children: notFound ? (0, _jsxRuntime.jsx)(_reactNative.View, {
      testID: "user-avatar-text",
      style: [styles(size).container, styles(size).gradient],
      children: (0, _jsxRuntime.jsx)(_Typography.default, {
        variant: "subHeading",
        children: initials
      })
    }) : (0, _jsxRuntime.jsx)(_reactNative.Image, {
      testID: "user-avatar-img",
      source: {
        uri: photo
      },
      style: styles(size).container
    })
  });
}
var styles = function styles(size) {
  return _reactNative.StyleSheet.create({
    container: {
      height: size || 50,
      width: size || 50,
      borderRadius: 9999
    },
    gradient: {
      display: 'flex',
      alignItems: 'center',
      justifyContent: 'center',
      backgroundColor: '#737373'
    }
  });
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZCIsInJlcXVpcmUiLCJfcmVhY3ROYXRpdmUiLCJfVHlwb2dyYXBoeSIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfanN4UnVudGltZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJVc2VyQXZhdGFyIiwiX3JlZiIsInBob3RvIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJzaXplIiwiX3VzZVN0YXRlIiwidXNlU3RhdGUiLCJfdXNlU3RhdGUyIiwiX3NsaWNlZFRvQXJyYXkyIiwibm90Rm91bmQiLCJzZXROb3RGb3VuZCIsImluaXRpYWxzIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJ1c2VFZmZlY3QiLCJmZXRjaEltYWdlVVJMIiwiX2ZldGNoSW1hZ2VVUkwiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9hc3luY1RvR2VuZXJhdG9yMiIsInJlc3BvbnNlIiwiZmV0Y2giLCJzdGF0dXMiLCJqc3giLCJWaWV3IiwiY2hpbGRyZW4iLCJ0ZXN0SUQiLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsImdyYWRpZW50IiwidmFyaWFudCIsIkltYWdlIiwic291cmNlIiwidXJpIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImhlaWdodCIsIndpZHRoIiwiYm9yZGVyUmFkaXVzIiwiZGlzcGxheSIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsImJhY2tncm91bmRDb2xvciJdLCJzb3VyY2VzIjpbIlVzZXJBdmF0YXIudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge3VzZUVmZmVjdCwgdXNlU3RhdGV9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7SW1hZ2UsIFN0eWxlU2hlZXQsIFZpZXd9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgVHlwb2dyYXBoeSBmcm9tICcuL1R5cG9ncmFwaHknO1xuXG50eXBlIFVzZXJBdmF0YXJQcm9wcyA9IHtcbiAgcGhvdG86IHN0cmluZztcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIHNpemU/OiBudW1iZXI7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBVc2VyQXZhdGFyKHtcbiAgcGhvdG8sXG4gIGZpcnN0TmFtZSxcbiAgbGFzdE5hbWUsXG4gIHNpemUsXG59OiBVc2VyQXZhdGFyUHJvcHMpIHtcbiAgY29uc3QgW25vdEZvdW5kLCBzZXROb3RGb3VuZF0gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgaW5pdGlhbHMgPSAoZmlyc3ROYW1lLmNoYXJBdCgwKSArIGxhc3ROYW1lLmNoYXJBdCgwKSkudG9VcHBlckNhc2UoKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGFzeW5jIGZ1bmN0aW9uIGZldGNoSW1hZ2VVUkwoKSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHBob3RvKTtcbiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICBzZXROb3RGb3VuZChmYWxzZSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZmV0Y2hJbWFnZVVSTCgpO1xuICB9LCBbcGhvdG9dKTtcblxuICByZXR1cm4gKFxuICAgIDxWaWV3PlxuICAgICAge25vdEZvdW5kID8gKFxuICAgICAgICA8Vmlld1xuICAgICAgICAgIHRlc3RJRD1cInVzZXItYXZhdGFyLXRleHRcIlxuICAgICAgICAgIHN0eWxlPXtbc3R5bGVzKHNpemUpLmNvbnRhaW5lciwgc3R5bGVzKHNpemUpLmdyYWRpZW50XX0+XG4gICAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cInN1YkhlYWRpbmdcIj57aW5pdGlhbHN9PC9UeXBvZ3JhcGh5PlxuICAgICAgICA8L1ZpZXc+XG4gICAgICApIDogKFxuICAgICAgICA8SW1hZ2VcbiAgICAgICAgICB0ZXN0SUQ9XCJ1c2VyLWF2YXRhci1pbWdcIlxuICAgICAgICAgIHNvdXJjZT17e3VyaTogcGhvdG99fVxuICAgICAgICAgIHN0eWxlPXtzdHlsZXMoc2l6ZSkuY29udGFpbmVyfVxuICAgICAgICAvPlxuICAgICAgKX1cbiAgICA8L1ZpZXc+XG4gICk7XG59XG5cbmNvbnN0IHN0eWxlcyA9IChzaXplOiBudW1iZXIgfCB1bmRlZmluZWQpID0+IHtcbiAgcmV0dXJuIFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgICBjb250YWluZXI6IHtcbiAgICAgIGhlaWdodDogc2l6ZSB8fCA1MCxcbiAgICAgIHdpZHRoOiBzaXplIHx8IDUwLFxuICAgICAgYm9yZGVyUmFkaXVzOiA5OTk5LFxuICAgIH0sXG4gICAgZ3JhZGllbnQ6IHtcbiAgICAgIGRpc3BsYXk6ICdmbGV4JyxcbiAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgICAgYmFja2dyb3VuZENvbG9yOiAnIzczNzM3MycsXG4gICAgfSxcbiAgfSk7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBQ0EsSUFBQUUsV0FBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBQXNDLElBQUFJLFdBQUEsR0FBQUosT0FBQTtBQUFBLFNBQUFLLHlCQUFBQyxXQUFBLGVBQUFDLE9BQUEsa0NBQUFDLGlCQUFBLE9BQUFELE9BQUEsUUFBQUUsZ0JBQUEs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