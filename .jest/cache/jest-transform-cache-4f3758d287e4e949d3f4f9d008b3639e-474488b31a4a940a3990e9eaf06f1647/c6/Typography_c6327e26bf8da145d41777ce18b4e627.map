{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_jsxRuntime","Typography","_ref","_ref$variant","variant","_ref$color","color","_ref$align","align","children","getTypographyStyle","typographyStyle","styles","heading","subHeading","body","caption","button","textAlign","padding","jsx","Text","style","StyleSheet","create","fontSize","fontWeight","textTransform","_default","exports","default"],"sources":["Typography.tsx"],"sourcesContent":["import React from 'react';\nimport {Text, StyleSheet, StyleProp, TextStyle} from 'react-native';\n\ntype TypographyProps = {\n  variant?: 'heading' | 'subHeading' | 'body' | 'caption' | 'button';\n  color?: 'light' | 'dark';\n  children: React.ReactNode;\n  align?: 'left' | 'right' | 'center';\n};\n\nconst Typography = ({\n  variant = 'body',\n  color = 'light',\n  align = 'left',\n  children,\n}: TypographyProps) => {\n  const getTypographyStyle = (): StyleProp<TextStyle> => {\n    let typographyStyle: {\n      fontSize?: number;\n      fontWeight?: any;\n      color?: string;\n    } = {};\n\n    switch (variant) {\n      case 'heading':\n        typographyStyle = styles.heading;\n        break;\n      case 'subHeading':\n        typographyStyle = styles.subHeading;\n        break;\n      case 'body':\n        typographyStyle = styles.body;\n        break;\n      case 'caption':\n        typographyStyle = styles.caption;\n        break;\n      case 'button':\n        typographyStyle = styles.button;\n        break;\n      default:\n        typographyStyle = styles.body;\n    }\n\n    switch (color) {\n      case 'light':\n        typographyStyle.color = '#fafafa';\n        break;\n      case 'dark':\n        typographyStyle.color = '#18181b';\n        break;\n      default:\n        break;\n    }\n\n    return [typographyStyle, {textAlign: align}, {padding: 5}];\n  };\n\n  return <Text style={getTypographyStyle()}>{children}</Text>;\n};\n\nconst styles = StyleSheet.create({\n  heading: {\n    fontSize: 30,\n    fontWeight: 'bold',\n  },\n  subHeading: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  body: {\n    fontSize: 18,\n  },\n  caption: {\n    fontSize: 12,\n  },\n  button: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n  },\n});\n\nexport default Typography;\n"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AAAoE,IAAAE,WAAA,GAAAF,OAAA;AASpE,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAKO;EAAA,IAAAC,YAAA,GAAAD,IAAA,CAJrBE,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,MAAM,GAAAA,YAAA;IAAAE,UAAA,GAAAH,IAAA,CAChBI,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,OAAO,GAAAA,UAAA;IAAAE,UAAA,GAAAL,IAAA,CACfM,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,MAAM,GAAAA,UAAA;IACdE,QAAQ,GAAAP,IAAA,CAARO,QAAQ;EAER,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAA,EAA+B;IACrD,IAAIC,eAIH,GAAG,CAAC,CAAC;IAEN,QAAQP,OAAO;MACb,KAAK,SAAS;QACZO,eAAe,GAAGC,MAAM,CAACC,OAAO;QAChC;MACF,KAAK,YAAY;QACfF,eAAe,GAAGC,MAAM,CAACE,UAAU;QACnC;MACF,KAAK,MAAM;QACTH,eAAe,GAAGC,MAAM,CAACG,IAAI;QAC7B;MACF,KAAK,SAAS;QACZJ,eAAe,GAAGC,MAAM,CAACI,OAAO;QAChC;MACF,KAAK,QAAQ;QACXL,eAAe,GAAGC,MAAM,CAACK,MAAM;QAC/B;MACF;QACEN,eAAe,GAAGC,MAAM,CAACG,IAAI;IACjC;IAEA,QAAQT,KAAK;MACX,KAAK,OAAO;QACVK,eAAe,CAACL,KAAK,GAAG,SAAS;QACjC;MACF,KAAK,MAAM;QACTK,eAAe,CAACL,KAAK,GAAG,SAAS;QACjC;MACF;QACE;IACJ;IAEA,OAAO,CAACK,eAAe,EAAE;MAACO,SAAS,EAAEV;IAAK,CAAC,EAAE;MAACW,OAAO,EAAE;IAAC,CAAC,CAAC;EAC5D,CAAC;EAED,OAAO,IAAAnB,WAAA,CAAAoB,GAAA,EAACrB,YAAA,CAAAsB,IAAI;IAACC,KAAK,EAAEZ,kBAAkB,CAAC,CAAE;IAAAD,QAAA,EAAEA;EAAQ,CAAO,CAAC;AAC7D,CAAC;AAED,IAAMG,MAAM,GAAGW,uBAAU,CAACC,MAAM,CAAC;EAC/BX,OAAO,EAAE;IACPY,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDZ,UAAU,EAAE;IACVW,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDX,IAAI,EAAE;IACJU,QAAQ,EAAE;EACZ,CAAC;EACDT,OAAO,EAAE;IACPS,QAAQ,EAAE;EACZ,CAAC;EACDR,MAAM,EAAE;IACNQ,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,aAAa,EAAE;EACjB;AACF,CAAC,CAAC;AAAC,IAAAC,QAAA,GAEY3B,UAAU;AAAA4B,OAAA,CAAAC,OAAA,GAAAF,QAAA"}