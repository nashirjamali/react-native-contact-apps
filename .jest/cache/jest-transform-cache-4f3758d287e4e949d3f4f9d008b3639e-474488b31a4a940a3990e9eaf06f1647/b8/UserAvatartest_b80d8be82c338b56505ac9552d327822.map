{"version":3,"names":["_getJestObj","mock","jest","fn","mockImplementation","Promise","resolve","status","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_UserAvatar","_jsxRuntime","_require","describe","test","default","photo","_render","render","jsx","firstName","lastName","getByTestId","image","waitFor","expect","props","source","uri","toBe","_render2","textContainer","initials","children","toBeTruthy"],"sources":["UserAvatar.test.tsx"],"sourcesContent":["jest.mock('node-fetch', () => {\n  return jest.fn().mockImplementation(() =>\n    Promise.resolve({\n      status: 200,\n    }),\n  );\n});\n\nimport React from 'react';\nimport {render, waitFor} from '@testing-library/react-native';\nimport UserAvatar from '../UserAvatar';\n\ndescribe('UserAvatar', () => {\n  test('renders image if photo exists', async () => {\n    const photo = 'https://example.com/avatar.jpg';\n    const {getByTestId} = render(\n      <UserAvatar photo={photo} firstName=\"John\" lastName=\"Doe\" />,\n    );\n    const image = getByTestId('user-avatar-img');\n    await waitFor(() => {\n      expect(image.props.source.uri).toBe(photo);\n    });\n  });\n\n  test('renders initials if photo is not found', async () => {\n    const {getByTestId} = render(\n      <UserAvatar photo=\"non-existing.jpg\" firstName=\"John\" lastName=\"Doe\" />,\n    );\n    const textContainer = getByTestId('user-avatar-text');\n    const initials =\n      getByTestId('user-avatar-text').props.children.props.children;\n    await waitFor(() => {\n      expect(textContainer).toBeTruthy();\n      expect(initials).toBe('JD');\n    });\n  });\n});\n"],"mappings":"AAAAA,WAAA,GAAKC,IAAI,CAAC,YAAY,EAAE,YAAM;EAC5B,OAAOC,IAAI,CAACC,EAAE,CAAC,CAAC,CAACC,kBAAkB,CAAC;IAAA,OAClCC,OAAO,CAACC,OAAO,CAAC;MACdC,MAAM,EAAE;IACV,CAAC,CAAC;EAAA,CACJ,CAAC;AACH,CAAC,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAEH,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,WAAA,GAAAL,sBAAA,CAAAC,OAAA;AAAuC,IAAAK,WAAA,GAAAL,OAAA;AAAA,SAAAT,YAAA;EAAA,IAAAe,QAAA,GAAAN,OAAA;IAAAP,IAAA,GAAAa,QAAA,CAAAb,IAAA;EAAAF,WAAA,YAAAA,YAAA;IAAA,OAAAE,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEvCc,QAAQ,CAAC,YAAY,EAAE,YAAM;EAC3BC,IAAI,CAAC,+BAA+B,MAAAP,kBAAA,CAAAQ,OAAA,EAAE,aAAY;IAChD,IAAMC,KAAK,GAAG,gCAAgC;IAC9C,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAC1B,IAAAP,WAAA,CAAAQ,GAAA,EAACT,WAAA,CAAAK,OAAU;QAACC,KAAK,EAAEA,KAAM;QAACI,SAAS,EAAC,MAAM;QAACC,QAAQ,EAAC;MAAK,CAAE,CAC7D,CAAC;MAFMC,WAAW,GAAAL,OAAA,CAAXK,WAAW;IAGlB,IAAMC,KAAK,GAAGD,WAAW,CAAC,iBAAiB,CAAC;IAC5C,MAAM,IAAAE,oBAAO,EAAC,YAAM;MAClBC,MAAM,CAACF,KAAK,CAACG,KAAK,CAACC,MAAM,CAACC,GAAG,CAAC,CAACC,IAAI,CAACb,KAAK,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,EAAC;EAEFF,IAAI,CAAC,wCAAwC,MAAAP,kBAAA,CAAAQ,OAAA,EAAE,aAAY;IACzD,IAAAe,QAAA,GAAsB,IAAAZ,mBAAM,EAC1B,IAAAP,WAAA,CAAAQ,GAAA,EAACT,WAAA,CAAAK,OAAU;QAACC,KAAK,EAAC,kBAAkB;QAACI,SAAS,EAAC,MAAM;QAACC,QAAQ,EAAC;MAAK,CAAE,CACxE,CAAC;MAFMC,WAAW,GAAAQ,QAAA,CAAXR,WAAW;IAGlB,IAAMS,aAAa,GAAGT,WAAW,CAAC,kBAAkB,CAAC;IACrD,IAAMU,QAAQ,GACZV,WAAW,CAAC,kBAAkB,CAAC,CAACI,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACO,QAAQ;IAC/D,MAAM,IAAAT,oBAAO,EAAC,YAAM;MAClBC,MAAM,CAACM,aAAa,CAAC,CAACG,UAAU,CAAC,CAAC;MAClCT,MAAM,CAACO,QAAQ,CAAC,CAACH,IAAI,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC,EAAC;AACJ,CAAC,CAAC"}