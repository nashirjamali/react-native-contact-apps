{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","flushValue","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_InteractionManager","_NativeAnimatedHelper","_AnimatedInterpolation","_AnimatedWithChildren2","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","prototype","valueOf","call","e","NativeAnimatedAPI","NativeAnimatedHelper","API","rootNode","leaves","Set","findAnimatedStyles","node","update","add","__getChildren","forEach","leaf","_executeAsAnimatedBatch","id","operation","setWaitingForIdentifier","unsetWaitingForIdentifier","AnimatedValue","_AnimatedWithChildren","_super","config","_this","Error","_startingValue","_value","_offset","_animation","useNativeDriver","__makeNative","key","__detach","_this2","__isNative","getValue","__getNativeTag","stopAnimation","__getValue","setValue","_this3","stop","_updateValue","toString","setAnimatedNodeValue","setOffset","offset","setAnimatedNodeOffset","flattenOffset","flattenAnimatedNodeOffset","extractOffset","extractAnimatedNodeOffset","callback","stopTracking","resetAnimation","__onAnimatedValueUpdateReceived","interpolate","AnimatedInterpolation","animate","animation","_this4","handle","__isInteraction","InteractionManager","createInteractionHandle","previousAnimation","start","clearInteractionHandle","_tracking","track","tracking","flush","undefined","__callListeners","__getNativeConfig","type","AnimatedWithChildren"],"sources":["AnimatedValue.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type Animation, {EndCallback} from '../animations/Animation';\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\nimport type AnimatedNode from './AnimatedNode';\nimport type AnimatedTracking from './AnimatedTracking';\n\nimport InteractionManager from '../../Interaction/InteractionManager';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport type AnimatedValueConfig = $ReadOnly<{\n  useNativeDriver: boolean,\n}>;\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\nexport function flushValue(rootNode: AnimatedNode): void {\n  const leaves = new Set<{update: () => void, ...}>();\n  function findAnimatedStyles(node: AnimatedNode) {\n    // $FlowFixMe[prop-missing]\n    if (typeof node.update === 'function') {\n      leaves.add((node: any));\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n  findAnimatedStyles(rootNode);\n  leaves.forEach(leaf => leaf.update());\n}\n\n/**\n * Some operations are executed only on batch end, which is _mostly_ scheduled when\n * Animated component props change. For some of the changes which require immediate execution\n * (e.g. setValue), we create a separate batch in case none is scheduled.\n */\nfunction _executeAsAnimatedBatch(id: string, operation: () => void) {\n  NativeAnimatedAPI.setWaitingForIdentifier(id);\n  operation();\n  NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n}\n\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See https://reactnative.dev/docs/animatedvalue\n */\nexport default class AnimatedValue extends AnimatedWithChildren {\n  _value: number;\n  _startingValue: number;\n  _offset: number;\n  _animation: ?Animation;\n  _tracking: ?AnimatedTracking;\n\n  constructor(value: number, config?: ?AnimatedValueConfig) {\n    super();\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n    this._startingValue = this._value = value;\n    this._offset = 0;\n    this._animation = null;\n    if (config && config.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  __detach() {\n    if (this.__isNative) {\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), value => {\n        this._value = value - this._offset;\n      });\n    }\n    this.stopAnimation();\n    super.__detach();\n  }\n\n  __getValue(): number {\n    return this._value + this._offset;\n  }\n\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setvalue\n   */\n  setValue(value: number): void {\n    if (this._animation) {\n      this._animation.stop();\n      this._animation = null;\n    }\n    this._updateValue(\n      value,\n      !this.__isNative /* don't perform a flush for natively driven values */,\n    );\n    if (this.__isNative) {\n      _executeAsAnimatedBatch(this.__getNativeTag().toString(), () =>\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value),\n      );\n    }\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setoffset\n   */\n  setOffset(offset: number): void {\n    this._offset = offset;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#flattenoffset\n   */\n  flattenOffset(): void {\n    this._value += this._offset;\n    this._offset = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#extractoffset\n   */\n  extractOffset(): void {\n    this._offset += this._value;\n    this._value = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#stopanimation\n   */\n  stopAnimation(callback?: ?(value: number) => void): void {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    if (callback) {\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n      } else {\n        callback(this.__getValue());\n      }\n    }\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#resetanimation\n   */\n  resetAnimation(callback?: ?(value: number) => void): void {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(\n        this.__getNativeTag(),\n        this._startingValue,\n      );\n    }\n  }\n\n  __onAnimatedValueUpdateReceived(value: number): void {\n    this._updateValue(value, false /*flush*/);\n  }\n\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n  interpolate<OutputT: number | string>(\n    config: InterpolationConfigType<OutputT>,\n  ): AnimatedInterpolation<OutputT> {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#animate\n   */\n  animate(animation: Animation, callback: ?EndCallback): void {\n    let handle = null;\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n    const previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(\n      this._value,\n      value => {\n        // Natively driven animations will never call into that callback, therefore we can always\n        // pass flush = true to allow the updated value to propagate to native with setNativeProps\n        this._updateValue(value, true /* flush */);\n      },\n      result => {\n        this._animation = null;\n        if (handle !== null) {\n          InteractionManager.clearInteractionHandle(handle);\n        }\n        callback && callback(result);\n      },\n      previousAnimation,\n      this,\n    );\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  stopTracking(): void {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  track(tracking: AnimatedTracking): void {\n    this.stopTracking();\n    this._tracking = tracking;\n    // Make sure that the tracking animation starts executing\n    this._tracking && this._tracking.update();\n  }\n\n  _updateValue(value: number, flush: boolean): void {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n    if (flush) {\n      flushValue(this);\n    }\n    this.__callListeners(this.__getValue());\n  }\n\n  __getNativeConfig(): Object {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset,\n    };\n  }\n}\n"],"mappings":"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"}