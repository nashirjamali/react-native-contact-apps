a436d4364293340c6772b768a9ff82d7
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _AvatarItem = _interopRequireDefault(require("../AvatarItem"));
var _jsxRuntime = require("react/jsx-runtime");
describe('AvatarItem', function () {
  var imageURL = 'https://example.com/avatar.jpg';
  var onSelectMock = jest.fn();
  afterEach(function () {
    jest.clearAllMocks();
  });
  test('renders correctly', function () {
    var _render = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AvatarItem.default, {
        imageURL: imageURL,
        onSelect: onSelectMock
      })),
      getByTestId = _render.getByTestId;
    var avatarImage = getByTestId('avatar-image');
    expect(avatarImage.props.source.uri).toBe(imageURL);
  });
  test('calls onSelect when pressed', function () {
    var _render2 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AvatarItem.default, {
        imageURL: imageURL,
        onSelect: onSelectMock
      })),
      getByTestId = _render2.getByTestId;
    var avatarContainer = getByTestId('avatar-container');
    _reactNative.fireEvent.press(avatarContainer);
    expect(onSelectMock).toHaveBeenCalledTimes(1);
  });
  test('renders with selected style when isSelected is true', function () {
    var _render3 = (0, _reactNative.render)((0, _jsxRuntime.jsx)(_AvatarItem.default, {
        imageURL: imageURL,
        onSelect: onSelectMock,
        isSelected: true
      })),
      getByTestId = _render3.getByTestId;
    var avatarImage = getByTestId('avatar-image');
    expect(avatarImage.props.style).toContainEqual({
      borderColor: '#1d4ed8',
      borderWidth: 10
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9BdmF0YXJJdGVtIiwiX2pzeFJ1bnRpbWUiLCJkZXNjcmliZSIsImltYWdlVVJMIiwib25TZWxlY3RNb2NrIiwiamVzdCIsImZuIiwiYWZ0ZXJFYWNoIiwiY2xlYXJBbGxNb2NrcyIsInRlc3QiLCJfcmVuZGVyIiwicmVuZGVyIiwianN4IiwiZGVmYXVsdCIsIm9uU2VsZWN0IiwiZ2V0QnlUZXN0SWQiLCJhdmF0YXJJbWFnZSIsImV4cGVjdCIsInByb3BzIiwic291cmNlIiwidXJpIiwidG9CZSIsIl9yZW5kZXIyIiwiYXZhdGFyQ29udGFpbmVyIiwiZmlyZUV2ZW50IiwicHJlc3MiLCJ0b0hhdmVCZWVuQ2FsbGVkVGltZXMiLCJfcmVuZGVyMyIsImlzU2VsZWN0ZWQiLCJzdHlsZSIsInRvQ29udGFpbkVxdWFsIiwiYm9yZGVyQ29sb3IiLCJib3JkZXJXaWR0aCJdLCJzb3VyY2VzIjpbIkF2YXRhckl0ZW0udGVzdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7cmVuZGVyLCBmaXJlRXZlbnR9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QtbmF0aXZlJztcbmltcG9ydCBBdmF0YXJJdGVtIGZyb20gJy4uL0F2YXRhckl0ZW0nO1xuXG5kZXNjcmliZSgnQXZhdGFySXRlbScsICgpID0+IHtcbiAgY29uc3QgaW1hZ2VVUkwgPSAnaHR0cHM6Ly9leGFtcGxlLmNvbS9hdmF0YXIuanBnJztcbiAgY29uc3Qgb25TZWxlY3RNb2NrID0gamVzdC5mbigpO1xuXG4gIGFmdGVyRWFjaCgoKSA9PiB7XG4gICAgamVzdC5jbGVhckFsbE1vY2tzKCk7XG4gIH0pO1xuXG4gIHRlc3QoJ3JlbmRlcnMgY29ycmVjdGx5JywgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoXG4gICAgICA8QXZhdGFySXRlbSBpbWFnZVVSTD17aW1hZ2VVUkx9IG9uU2VsZWN0PXtvblNlbGVjdE1vY2t9IC8+LFxuICAgICk7XG4gICAgY29uc3QgYXZhdGFySW1hZ2UgPSBnZXRCeVRlc3RJZCgnYXZhdGFyLWltYWdlJyk7XG4gICAgZXhwZWN0KGF2YXRhckltYWdlLnByb3BzLnNvdXJjZS51cmkpLnRvQmUoaW1hZ2VVUkwpO1xuICB9KTtcblxuICB0ZXN0KCdjYWxscyBvblNlbGVjdCB3aGVuIHByZXNzZWQnLCAoKSA9PiB7XG4gICAgY29uc3Qge2dldEJ5VGVzdElkfSA9IHJlbmRlcihcbiAgICAgIDxBdmF0YXJJdGVtIGltYWdlVVJMPXtpbWFnZVVSTH0gb25TZWxlY3Q9e29uU2VsZWN0TW9ja30gLz4sXG4gICAgKTtcbiAgICBjb25zdCBhdmF0YXJDb250YWluZXIgPSBnZXRCeVRlc3RJZCgnYXZhdGFyLWNvbnRhaW5lcicpO1xuICAgIGZpcmVFdmVudC5wcmVzcyhhdmF0YXJDb250YWluZXIpO1xuICAgIGV4cGVjdChvblNlbGVjdE1vY2spLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKTtcbiAgfSk7XG5cbiAgdGVzdCgncmVuZGVycyB3aXRoIHNlbGVjdGVkIHN0eWxlIHdoZW4gaXNTZWxlY3RlZCBpcyB0cnVlJywgKCkgPT4ge1xuICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoXG4gICAgICA8QXZhdGFySXRlbSBpbWFnZVVSTD17aW1hZ2VVUkx9IG9uU2VsZWN0PXtvblNlbGVjdE1vY2t9IGlzU2VsZWN0ZWQgLz4sXG4gICAgKTtcbiAgICBjb25zdCBhdmF0YXJJbWFnZSA9IGdldEJ5VGVzdElkKCdhdmF0YXItaW1hZ2UnKTtcbiAgICBleHBlY3QoYXZhdGFySW1hZ2UucHJvcHMuc3R5bGUpLnRvQ29udGFpbkVxdWFsKHtcbiAgICAgIGJvcmRlckNvbG9yOiAnIzFkNGVkOCcsXG4gICAgICBib3JkZXJXaWR0aDogMTAsXG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBQSxNQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxXQUFBLEdBQUFILHNCQUFBLENBQUFDLE9BQUE7QUFBdUMsSUFBQUcsV0FBQSxHQUFBSCxPQUFBO0FBRXZDSSxRQUFRLENBQUMsWUFBWSxFQUFFLFlBQU07RUFDM0IsSUFBTUMsUUFBUSxHQUFHLGdDQUFnQztFQUNqRCxJQUFNQyxZQUFZLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxDQUFDLENBQUM7RUFFOUJDLFNBQVMsQ0FBQyxZQUFNO0lBQ2RGLElBQUksQ0FBQ0csYUFBYSxDQUFDLENBQUM7RUFDdEIsQ0FBQyxDQUFDO0VBRUZDLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxZQUFNO0lBQzlCLElBQUFDLE9BQUEsR0FBc0IsSUFBQUMsbUJBQU0sRUFDMUIsSUFBQVYsV0FBQSxDQUFBVyxHQUFBLEVBQUNaLFdBQUEsQ0FBQWEsT0FBVTtRQUFDVixRQUFRLEVBQUVBLFFBQVM7UUFBQ1csUUFBUSxFQUFFVjtNQUFhLENBQUUsQ0FDM0QsQ0FBQztNQUZNVyxXQUFXLEdBQUFMLE9BQUEsQ0FBWEssV0FBVztJQUdsQixJQUFNQyxXQUFXLEdBQUdELFdBQVcsQ0FBQyxjQUFjLENBQUM7SUFDL0NFLE1BQU0sQ0FBQ0QsV0FBVyxDQUFDRSxLQUFLLENBQUNDLE1BQU0sQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQ2xCLFFBQVEsQ0FBQztFQUNyRCxDQUFDLENBQUM7RUFFRk0sSUFBSSxDQUFDLDZCQUE2QixFQUFFLFlBQU07SUFDeEMsSUFBQWEsUUFBQSxHQUFzQixJQUFBWCxtQkFBTSxFQUMxQixJQUFBVixXQUFBLENBQUFXLEdBQUEsRUFBQ1osV0FBQSxDQUFBYSxPQUFVO1FBQUNWLFFBQVEsRUFBRUEsUUFBUztRQUFDVyxRQUFRLEVBQUVWO01BQWEsQ0FBRSxDQUMzRCxDQUFDO01BRk1XLFdBQVcsR0FBQU8sUUFBQSxDQUFYUCxXQUFXO0lBR2xCLElBQU1RLGVBQWUsR0FBR1IsV0FBVyxDQUFDLGtCQUFrQixDQUFDO0lBQ3ZEUyxzQkFBUyxDQUFDQyxLQUFLLENBQUNGLGVBQWUsQ0FBQztJQUNoQ04sTUFBTSxDQUFDYixZQUFZLENBQUMsQ0FBQ3NCLHFCQUFxQixDQUFDLENBQUMsQ0FBQztFQUMvQyxDQUFDLENBQUM7RUFFRmpCLElBQUksQ0FBQyxxREFBcUQsRUFBRSxZQUFNO0lBQ2hFLElBQUFrQixRQUFBLEdBQXNCLElBQUFoQixtQkFBTSxFQUMxQixJQUFBVixXQUFBLENBQUFXLEdBQUEsRUFBQ1osV0FBQSxDQUFBYSxPQUFVO1FBQUNWLFFBQVEsRUFBRUEsUUFBUztRQUFDVyxRQUFRLEVBQUVWLFlBQWE7UUFBQ3dCLFVBQVU7TUFBQSxDQUFFLENBQ3RFLENBQUM7TUFGTWIsV0FBVyxHQUFBWSxRQUFBLENBQVhaLFdBQVc7SUFHbEIsSUFBTUMsV0FBVyxHQUFHRCxXQUFXLENBQUMsY0FBYyxDQUFDO0lBQy9DRSxNQUFNLENBQUNELFdBQVcsQ0FBQ0UsS0FBSyxDQUFDVyxLQUFLLENBQUMsQ0FBQ0MsY0FBYyxDQUFDO01BQzdDQyxXQUFXLEVBQUUsU0FBUztNQUN0QkMsV0FBVyxFQUFFO0lBQ2YsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0FBQ0osQ0FBQyxDQUFDIn0=