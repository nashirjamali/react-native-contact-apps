13b10edaec944e2dc5bee5441c4f929a
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = List;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _contact = require("../apis/contact");
var _Typography = _interopRequireDefault(require("../components/Typography"));
var _ContactItem = _interopRequireDefault(require("../components/ContactItem"));
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _lucideReactNative = require("lucide-react-native");
var _Button = _interopRequireDefault(require("../components/Button"));
var _native = require("@react-navigation/native");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function cov_m1d2egmz9() {
  var path = "D:\\riset\\ReactNative\\ContactApps\\src\\screens\\List.tsx";
  var hash = "53ce81d1bf8ffeeebabcb330180ae6b7c3be222b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\riset\\ReactNative\\ContactApps\\src\\screens\\List.tsx",
    statementMap: {
      "0": {
        start: {
          line: 16,
          column: 34
        },
        end: {
          line: 16,
          column: 57
        }
      },
      "1": {
        start: {
          line: 18,
          column: 20
        },
        end: {
          line: 18,
          column: 34
        }
      },
      "2": {
        start: {
          line: 21,
          column: 27
        },
        end: {
          line: 21,
          column: 46
        }
      },
      "3": {
        start: {
          line: 23,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "4": {
        start: {
          line: 24,
          column: 6
        },
        end: {
          line: 24,
          column: 29
        }
      },
      "5": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 26,
          column: 51
        }
      },
      "6": {
        start: {
          line: 30,
          column: 2
        },
        end: {
          line: 32,
          column: 18
        }
      },
      "7": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 21
        }
      },
      "8": {
        start: {
          line: 34,
          column: 2
        },
        end: {
          line: 58,
          column: 4
        }
      },
      "9": {
        start: {
          line: 38,
          column: 31
        },
        end: {
          line: 38,
          column: 75
        }
      },
      "10": {
        start: {
          line: 44,
          column: 10
        },
        end: {
          line: 54,
          column: 12
        }
      },
      "11": {
        start: {
          line: 49,
          column: 16
        },
        end: {
          line: 51,
          column: 18
        }
      },
      "12": {
        start: {
          line: 61,
          column: 15
        },
        end: {
          line: 78,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "List",
        decl: {
          start: {
            line: 15,
            column: 24
          },
          end: {
            line: 15,
            column: 28
          }
        },
        loc: {
          start: {
            line: 15,
            column: 50
          },
          end: {
            line: 59,
            column: 1
          }
        },
        line: 15
      },
      "1": {
        name: "getContactData",
        decl: {
          start: {
            line: 20,
            column: 17
          },
          end: {
            line: 20,
            column: 31
          }
        },
        loc: {
          start: {
            line: 20,
            column: 34
          },
          end: {
            line: 28,
            column: 3
          }
        },
        line: 20
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 30,
            column: 12
          },
          end: {
            line: 30,
            column: 13
          }
        },
        loc: {
          start: {
            line: 30,
            column: 18
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 30
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 25
          },
          end: {
            line: 38,
            column: 26
          }
        },
        loc: {
          start: {
            line: 38,
            column: 31
          },
          end: {
            line: 38,
            column: 75
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 43,
            column: 22
          },
          end: {
            line: 43,
            column: 23
          }
        },
        loc: {
          start: {
            line: 43,
            column: 33
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 43
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 48,
            column: 23
          },
          end: {
            line: 48,
            column: 24
          }
        },
        loc: {
          start: {
            line: 49,
            column: 16
          },
          end: {
            line: 51,
            column: 18
          }
        },
        line: 49
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: 25,
            column: 11
          },
          end: {
            line: 27,
            column: 5
          }
        }],
        line: 23
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "53ce81d1bf8ffeeebabcb330180ae6b7c3be222b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_m1d2egmz9 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_m1d2egmz9();
function List(_ref) {
  var navigation = _ref.navigation;
  cov_m1d2egmz9().f[0]++;
  var _ref2 = (cov_m1d2egmz9().s[0]++, (0, _react.useState)([])),
    _ref3 = (0, _slicedToArray2.default)(_ref2, 2),
    contacts = _ref3[0],
    setContacts = _ref3[1];
  var isFocused = (cov_m1d2egmz9().s[1]++, (0, _native.useIsFocused)());
  function getContactData() {
    return _getContactData.apply(this, arguments);
  }
  function _getContactData() {
    _getContactData = (0, _asyncToGenerator2.default)(function* () {
      cov_m1d2egmz9().f[1]++;
      var _ref4 = (cov_m1d2egmz9().s[2]++, yield (0, _contact.getContacts)()),
        data = _ref4.data,
        status = _ref4.status;
      cov_m1d2egmz9().s[3]++;
      if (status === 200) {
        cov_m1d2egmz9().b[0][0]++;
        cov_m1d2egmz9().s[4]++;
        setContacts(data.data);
      } else {
        cov_m1d2egmz9().b[0][1]++;
        cov_m1d2egmz9().s[5]++;
        _reactNative.Alert.alert('Error', 'something went wrong');
      }
    });
    return _getContactData.apply(this, arguments);
  }
  cov_m1d2egmz9().s[6]++;
  (0, _react.useEffect)(function () {
    cov_m1d2egmz9().f[2]++;
    cov_m1d2egmz9().s[7]++;
    getContactData();
  }, [isFocused]);
  cov_m1d2egmz9().s[8]++;
  return (0, _jsxRuntime.jsxs)(_reactNativeSafeAreaContext.SafeAreaView, {
    style: styles.container,
    children: [(0, _jsxRuntime.jsxs)(_reactNative.View, {
      style: styles.header,
      children: [(0, _jsxRuntime.jsx)(_Typography.default, {
        children: "Contact"
      }), (0, _jsxRuntime.jsx)(_Button.default, {
        onPress: function onPress() {
          cov_m1d2egmz9().f[3]++;
          cov_m1d2egmz9().s[9]++;
          return navigation.navigate('Form', {
            isEdit: false
          });
        },
        children: (0, _jsxRuntime.jsx)(_lucideReactNative.Plus, {
          color: "#fafafa",
          size: 20
        })
      })]
    }), (0, _jsxRuntime.jsx)(_reactNative.ScrollView, {
      style: styles.list,
      children: contacts.map(function (contact) {
        cov_m1d2egmz9().f[4]++;
        cov_m1d2egmz9().s[10]++;
        return (0, _jsxRuntime.jsx)(_ContactItem.default, {
          contact: contact,
          onPress: function onPress() {
            cov_m1d2egmz9().f[5]++;
            cov_m1d2egmz9().s[11]++;
            return navigation.navigate('Detail', {
              id: contact.id
            });
          }
        }, contact.id);
      })
    })]
  });
}
var styles = (cov_m1d2egmz9().s[12]++, _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#18181b'
  },
  header: {
    backgroundColor: '#09090b',
    padding: 20,
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center'
  },
  list: {
    paddingTop: 20,
    flex: 1
  }
}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,