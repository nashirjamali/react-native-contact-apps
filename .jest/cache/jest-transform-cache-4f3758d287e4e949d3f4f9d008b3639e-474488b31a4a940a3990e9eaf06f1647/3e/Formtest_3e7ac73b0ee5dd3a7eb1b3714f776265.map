{"version":3,"names":["_getJestObj","mock","Object","assign","jest","requireActual","useIsFocused","fn","_interopRequireDefault","require","_react","_reactNative","_configureStore","_Form","_testUtils","_jsxRuntime","_require","store","configureStore","createTestProps","props","navigation","navigate","describe","test","_renderWithProviders","renderWithProviders","jsx","default","route","key","name","params","isEdit","getByPlaceholderText","getByText","firstNameInput","lastNameInput","ageInput","nextButton","fireEvent","changeText","expect","value","toBe","disabled"],"sources":["Form.test.tsx"],"sourcesContent":["import React from 'react';\nimport {render, fireEvent} from '@testing-library/react-native';\nimport {Provider} from 'react-redux';\nimport configureStore from '../redux/configureStore';\nimport Form from '../Form';\nimport {renderWithProviders} from '../../utils/test-utils';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport {RootStackParamList} from '../../types';\n\nconst store = configureStore();\n\njest.mock('@react-navigation/native', () => ({\n  ...jest.requireActual('@react-navigation/native'),\n  useIsFocused: jest.fn(),\n}));\n\ntype NavigationProps = StackNavigationProp<RootStackParamList, 'Form'>;\n\nconst createTestProps = (props: Partial<NavigationProps>) => ({\n  navigation: {\n    navigate: jest.fn(),\n    ...props,\n  } as NavigationProps,\n  ...props,\n});\n\ndescribe('Form', () => {\n  test('renders correctly and enables next button when form is complete', () => {\n    const props = createTestProps({});\n    const {getByPlaceholderText, getByText} = renderWithProviders(\n      <Form\n        route={{key: 'Form', name: 'Form', params: {isEdit: false}}}\n        {...props}\n      />,\n    );\n\n    const firstNameInput = getByPlaceholderText('First Name');\n    const lastNameInput = getByPlaceholderText('Last Name');\n    const ageInput = getByPlaceholderText('Age');\n    const nextButton = getByText('Next');\n\n    fireEvent.changeText(firstNameInput, 'John');\n    fireEvent.changeText(lastNameInput, 'Doe');\n    fireEvent.changeText(ageInput, '30');\n\n    expect(firstNameInput.props.value).toBe('John');\n    expect(lastNameInput.props.value).toBe('Doe');\n    expect(ageInput.props.value).toBe('30');\n    expect(nextButton.props.disabled).toBe(false);\n  });\n\n  //   test('navigates to ChooseAvatar screen when Next button is clicked', () => {\n  //     const navigationMock = {\n  //       navigate: jest.fn(),\n  //     };\n\n  //     const {getByPlaceholderText, getByText, getByTestId} = render(\n  //       <Provider store={store}>\n  //         <Form route={{params: {isEdit: false}}} navigation={navigationMock} />\n  //       </Provider>,\n  //     );\n\n  //     const firstNameInput = getByPlaceholderText('First Name');\n  //     const lastNameInput = getByPlaceholderText('Last Name');\n  //     const ageInput = getByPlaceholderText('Age');\n  //     const nextButton = getByText('Next');\n\n  //     fireEvent.changeText(firstNameInput, 'John');\n  //     fireEvent.changeText(lastNameInput, 'Doe');\n  //     fireEvent.changeText(ageInput, '30');\n  //     fireEvent.press(nextButton);\n\n  //     expect(navigationMock.navigate).toHaveBeenCalledWith('ChooseAvatar', {\n  //       isEdit: false,\n  //     });\n  //   });\n});\n"],"mappings":"AAWAA,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE;EAAA,OAAAC,MAAA,CAAAC,MAAA,KACjCC,IAAI,CAACC,aAAa,CAAC,0BAA0B,CAAC;IACjDC,YAAY,EAAEF,IAAI,CAACG,EAAE,CAAC;EAAC;AAAA,CACvB,CAAC;AAAC,IAAAC,sBAAA,GAAAC,OAAA;AAdJ,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,YAAA,GAAAF,OAAA;AAEA,IAAAG,eAAA,GAAAJ,sBAAA,CAAAC,OAAA;AACA,IAAAI,KAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,UAAA,GAAAL,OAAA;AAA2D,IAAAM,WAAA,GAAAN,OAAA;AAAA,SAAAT,YAAA;EAAA,IAAAgB,QAAA,GAAAP,OAAA;IAAAL,IAAA,GAAAY,QAAA,CAAAZ,IAAA;EAAAJ,WAAA,YAAAA,YAAA;IAAA,OAAAI,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAI3D,IAAMa,KAAK,GAAG,IAAAC,uBAAc,EAAC,CAAC;AAS9B,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAA+B;EAAA,OAAAlB,MAAA,CAAAC,MAAA;IACtDkB,UAAU,EAAAnB,MAAA,CAAAC,MAAA;MACRmB,QAAQ,EAAElB,IAAI,CAACG,EAAE,CAAC;IAAC,GAChBa,KAAK;EACU,GACjBA,KAAK;AAAA,CACR;AAEFG,QAAQ,CAAC,MAAM,EAAE,YAAM;EACrBC,IAAI,CAAC,iEAAiE,EAAE,YAAM;IAC5E,IAAMJ,KAAK,GAAGD,eAAe,CAAC,CAAC,CAAC,CAAC;IACjC,IAAAM,oBAAA,GAA0C,IAAAC,8BAAmB,EAC3D,IAAAX,WAAA,CAAAY,GAAA,EAACd,KAAA,CAAAe,OAAI,EAAA1B,MAAA,CAAAC,MAAA;QACH0B,KAAK,EAAE;UAACC,GAAG,EAAE,MAAM;UAAEC,IAAI,EAAE,MAAM;UAAEC,MAAM,EAAE;YAACC,MAAM,EAAE;UAAK;QAAC;MAAE,GACxDb,KAAK,CACV,CACH,CAAC;MALMc,oBAAoB,GAAAT,oBAAA,CAApBS,oBAAoB;MAAEC,SAAS,GAAAV,oBAAA,CAATU,SAAS;IAOtC,IAAMC,cAAc,GAAGF,oBAAoB,CAAC,YAAY,CAAC;IACzD,IAAMG,aAAa,GAAGH,oBAAoB,CAAC,WAAW,CAAC;IACvD,IAAMI,QAAQ,GAAGJ,oBAAoB,CAAC,KAAK,CAAC;IAC5C,IAAMK,UAAU,GAAGJ,SAAS,CAAC,MAAM,CAAC;IAEpCK,sBAAS,CAACC,UAAU,CAACL,cAAc,EAAE,MAAM,CAAC;IAC5CI,sBAAS,CAACC,UAAU,CAACJ,aAAa,EAAE,KAAK,CAAC;IAC1CG,sBAAS,CAACC,UAAU,CAACH,QAAQ,EAAE,IAAI,CAAC;IAEpCI,MAAM,CAACN,cAAc,CAAChB,KAAK,CAACuB,KAAK,CAAC,CAACC,IAAI,CAAC,MAAM,CAAC;IAC/CF,MAAM,CAACL,aAAa,CAACjB,KAAK,CAACuB,KAAK,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAC7CF,MAAM,CAACJ,QAAQ,CAAClB,KAAK,CAACuB,KAAK,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IACvCF,MAAM,CAACH,UAAU,CAACnB,KAAK,CAACyB,QAAQ,CAAC,CAACD,IAAI,CAAC,KAAK,CAAC;EAC/C,CAAC,CAAC;AA2BJ,CAAC,CAAC"}