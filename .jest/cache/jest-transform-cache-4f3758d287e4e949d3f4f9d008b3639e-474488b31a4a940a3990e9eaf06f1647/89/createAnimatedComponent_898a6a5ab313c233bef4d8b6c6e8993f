e1be130a616c715e4b82163d57b5f2d3
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createAnimatedComponent;
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _View = _interopRequireDefault(require("../Components/View/View"));
var _useMergeRefs = _interopRequireDefault(require("../Utilities/useMergeRefs"));
var _useAnimatedProps3 = _interopRequireDefault(require("./useAnimatedProps"));
var React = _interopRequireWildcard(require("react"));
var _jsxRuntime = require("react/jsx-runtime");
var _excluded = ["style"];
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function createAnimatedComponent(Component) {
  return React.forwardRef(function (props, forwardedRef) {
    var _useAnimatedProps = (0, _useAnimatedProps3.default)(props),
      _useAnimatedProps2 = (0, _slicedToArray2.default)(_useAnimatedProps, 2),
      reducedProps = _useAnimatedProps2[0],
      callbackRef = _useAnimatedProps2[1];
    var ref = (0, _useMergeRefs.default)(callbackRef, forwardedRef);
    var passthroughAnimatedPropExplicitValues = reducedProps.passthroughAnimatedPropExplicitValues,
      style = reducedProps.style;
    var _ref = passthroughAnimatedPropExplicitValues != null ? passthroughAnimatedPropExplicitValues : {},
      passthroughStyle = _ref.style,
      passthroughProps = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    var mergedStyle = Object.assign({}, style, passthroughStyle);
    return (0, _jsxRuntime.jsx)(Component, Object.assign({}, reducedProps, passthroughProps, {
      style: mergedStyle,
      ref: ref
    }));
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfVmlldyIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3VzZU1lcmdlUmVmcyIsIl91c2VBbmltYXRlZFByb3BzMyIsIlJlYWN0IiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfanN4UnVudGltZSIsIl9leGNsdWRlZCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJjcmVhdGVBbmltYXRlZENvbXBvbmVudCIsIkNvbXBvbmVudCIsImZvcndhcmRSZWYiLCJwcm9wcyIsImZvcndhcmRlZFJlZiIsIl91c2VBbmltYXRlZFByb3BzIiwidXNlQW5pbWF0ZWRQcm9wcyIsIl91c2VBbmltYXRlZFByb3BzMiIsIl9zbGljZWRUb0FycmF5MiIsInJlZHVjZWRQcm9wcyIsImNhbGxiYWNrUmVmIiwicmVmIiwidXNlTWVyZ2VSZWZzIiwicGFzc3Rocm91Z2hBbmltYXRlZFByb3BFeHBsaWNpdFZhbHVlcyIsInN0eWxlIiwiX3JlZiIsInBhc3N0aHJvdWdoU3R5bGUiLCJwYXNzdGhyb3VnaFByb3BzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIm1lcmdlZFN0eWxlIiwiYXNzaWduIiwianN4Il0sInNvdXJjZXMiOlsiY3JlYXRlQW5pbWF0ZWRDb21wb25lbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIE1ldGEgUGxhdGZvcm1zLCBJbmMuIGFuZCBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuaW1wb3J0IFZpZXcgZnJvbSAnLi4vQ29tcG9uZW50cy9WaWV3L1ZpZXcnO1xuaW1wb3J0IHVzZU1lcmdlUmVmcyBmcm9tICcuLi9VdGlsaXRpZXMvdXNlTWVyZ2VSZWZzJztcbmltcG9ydCB1c2VBbmltYXRlZFByb3BzIGZyb20gJy4vdXNlQW5pbWF0ZWRQcm9wcyc7XG5pbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5cbmV4cG9ydCB0eXBlIEFuaW1hdGVkQ29tcG9uZW50VHlwZTxcbiAgLVByb3BzOiB7K1tzdHJpbmddOiBtaXhlZCwgLi4ufSxcbiAgK0luc3RhbmNlID0gbWl4ZWQsXG4+ID0gUmVhY3QuQWJzdHJhY3RDb21wb25lbnQ8XG4gICRPYmpNYXA8XG4gICAgUHJvcHMgJlxuICAgICAgJFJlYWRPbmx5PHtcbiAgICAgICAgcGFzc3Rocm91Z2hBbmltYXRlZFByb3BFeHBsaWNpdFZhbHVlcz86IFJlYWN0LkVsZW1lbnRDb25maWc8XG4gICAgICAgICAgdHlwZW9mIFZpZXcsXG4gICAgICAgID4sXG4gICAgICB9PixcbiAgICAoKSA9PiBhbnksXG4gID4sXG4gIEluc3RhbmNlLFxuPjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlQW5pbWF0ZWRDb21wb25lbnQ8VFByb3BzOiB7Li4ufSwgVEluc3RhbmNlPihcbiAgQ29tcG9uZW50OiBSZWFjdC5BYnN0cmFjdENvbXBvbmVudDxUUHJvcHMsIFRJbnN0YW5jZT4sXG4pOiBBbmltYXRlZENvbXBvbmVudFR5cGU8VFByb3BzLCBUSW5zdGFuY2U+IHtcbiAgcmV0dXJuIFJlYWN0LmZvcndhcmRSZWYoKHByb3BzLCBmb3J3YXJkZWRSZWYpID0+IHtcbiAgICBjb25zdCBbcmVkdWNlZFByb3BzLCBjYWxsYmFja1JlZl0gPSB1c2VBbmltYXRlZFByb3BzPFRQcm9wcywgVEluc3RhbmNlPihcbiAgICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLWNhbGxdXG4gICAgICBwcm9wcyxcbiAgICApO1xuICAgIGNvbnN0IHJlZiA9IHVzZU1lcmdlUmVmczxUSW5zdGFuY2UgfCBudWxsPihjYWxsYmFja1JlZiwgZm9yd2FyZGVkUmVmKTtcblxuICAgIC8vIFNvbWUgY29tcG9uZW50cyByZXF1aXJlIGV4cGxpY2l0IHBhc3N0aHJvdWdoIHZhbHVlcyBmb3IgYW5pbWF0aW9uXG4gICAgLy8gdG8gd29yayBwcm9wZXJseS4gRm9yIGV4YW1wbGUsIGlmIGFuIGFuaW1hdGVkIGNvbXBvbmVudCBpc1xuICAgIC8vIHRyYW5zZm9ybWVkIGFuZCBQcmVzc2FibGUsIG9uUHJlc3Mgd2lsbCBub3Qgd29yayBhZnRlciB0cmFuc2Zvcm1cbiAgICAvLyB3aXRob3V0IHRoZXNlIHBhc3N0aHJvdWdoIHZhbHVlcy5cbiAgICAvLyAkRmxvd0ZpeE1lW3Byb3AtbWlzc2luZ11cbiAgICBjb25zdCB7cGFzc3Rocm91Z2hBbmltYXRlZFByb3BFeHBsaWNpdFZhbHVlcywgc3R5bGV9ID0gcmVkdWNlZFByb3BzO1xuICAgIGNvbnN0IHtzdHlsZTogcGFzc3Rocm91Z2hTdHlsZSwgLi4ucGFzc3Rocm91Z2hQcm9wc30gPVxuICAgICAgcGFzc3Rocm91Z2hBbmltYXRlZFByb3BFeHBsaWNpdFZhbHVlcyA/PyB7fTtcbiAgICBjb25zdCBtZXJnZWRTdHlsZSA9IHsuLi5zdHlsZSwgLi4ucGFzc3Rocm91Z2hTdHlsZX07XG5cbiAgICByZXR1cm4gKFxuICAgICAgPENvbXBvbmVudFxuICAgICAgICB7Li4ucmVkdWNlZFByb3BzfVxuICAgICAgICB7Li4ucGFzc3Rocm91Z2hQcm9wc31cbiAgICAgICAgc3R5bGU9e21lcmdlZFN0eWxlfVxu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