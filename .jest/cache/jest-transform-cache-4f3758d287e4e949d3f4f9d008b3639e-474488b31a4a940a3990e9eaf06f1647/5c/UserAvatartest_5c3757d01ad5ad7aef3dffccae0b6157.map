{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_UserAvatar","_jsxRuntime","describe","test","_asyncToGenerator2","default","jest","spyOn","global","mockResolvedValueOnce","Promise","resolve","ok","status","photo","render","jsx","firstName","lastName","image","screen","getByTestId","waitFor","expect","props","source","uri","toBe","_render","textContainer","initials","children","toBeTruthy"],"sources":["UserAvatar.test.tsx"],"sourcesContent":["import React from 'react';\nimport {act, render, waitFor, screen} from '@testing-library/react-native';\nimport UserAvatar from '../UserAvatar';\n\ndescribe('UserAvatar', () => {\n  test('renders image if photo exists', async () => {\n    jest\n      .spyOn(global, 'fetch')\n      .mockResolvedValueOnce(\n        Promise.resolve({ok: true, status: 200} as Response),\n      );\n\n    const photo = 'https://example.com/avatar.jpg';\n\n    render(<UserAvatar photo={photo} firstName=\"John\" lastName=\"Doe\" />);\n    const image = screen.getByTestId('user-avatar-img');\n    await waitFor(() => {\n      expect(image.props.source.uri).toBe(photo);\n    });\n  });\n\n  test('renders initials if photo is not found', async () => {\n    jest\n      .spyOn(global, 'fetch')\n      .mockResolvedValueOnce(\n        Promise.resolve({ok: true, status: 404} as Response),\n      );\n\n    const {getByTestId} = render(\n      <UserAvatar photo=\"non-existing.jpg\" firstName=\"John\" lastName=\"Doe\" />,\n    );\n    const textContainer = getByTestId('user-avatar-text');\n    const initials =\n      getByTestId('user-avatar-text').props.children.props.children;\n    await waitFor(() => {\n      expect(textContainer).toBeTruthy();\n      expect(initials).toBe('JD');\n    });\n  });\n});\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAuC,IAAAG,WAAA,GAAAH,OAAA;AAEvCI,QAAQ,CAAC,YAAY,EAAE,YAAM;EAC3BC,IAAI,CAAC,+BAA+B,MAAAC,kBAAA,CAAAC,OAAA,EAAE,aAAY;IAChDC,IAAI,CACDC,KAAK,CAACC,MAAM,EAAE,OAAO,CAAC,CACtBC,qBAAqB,CACpBC,OAAO,CAACC,OAAO,CAAC;MAACC,EAAE,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAG,CAAa,CACrD,CAAC;IAEH,IAAMC,KAAK,GAAG,gCAAgC;IAE9C,IAAAC,mBAAM,EAAC,IAAAd,WAAA,CAAAe,GAAA,EAAChB,WAAA,CAAAK,OAAU;MAACS,KAAK,EAAEA,KAAM;MAACG,SAAS,EAAC,MAAM;MAACC,QAAQ,EAAC;IAAK,CAAE,CAAC,CAAC;IACpE,IAAMC,KAAK,GAAGC,mBAAM,CAACC,WAAW,CAAC,iBAAiB,CAAC;IACnD,MAAM,IAAAC,oBAAO,EAAC,YAAM;MAClBC,MAAM,CAACJ,KAAK,CAACK,KAAK,CAACC,MAAM,CAACC,GAAG,CAAC,CAACC,IAAI,CAACb,KAAK,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,EAAC;EAEFX,IAAI,CAAC,wCAAwC,MAAAC,kBAAA,CAAAC,OAAA,EAAE,aAAY;IACzDC,IAAI,CACDC,KAAK,CAACC,MAAM,EAAE,OAAO,CAAC,CACtBC,qBAAqB,CACpBC,OAAO,CAACC,OAAO,CAAC;MAACC,EAAE,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAG,CAAa,CACrD,CAAC;IAEH,IAAAe,OAAA,GAAsB,IAAAb,mBAAM,EAC1B,IAAAd,WAAA,CAAAe,GAAA,EAAChB,WAAA,CAAAK,OAAU;QAACS,KAAK,EAAC,kBAAkB;QAACG,SAAS,EAAC,MAAM;QAACC,QAAQ,EAAC;MAAK,CAAE,CACxE,CAAC;MAFMG,WAAW,GAAAO,OAAA,CAAXP,WAAW;IAGlB,IAAMQ,aAAa,GAAGR,WAAW,CAAC,kBAAkB,CAAC;IACrD,IAAMS,QAAQ,GACZT,WAAW,CAAC,kBAAkB,CAAC,CAACG,KAAK,CAACO,QAAQ,CAACP,KAAK,CAACO,QAAQ;IAC/D,MAAM,IAAAT,oBAAO,EAAC,YAAM;MAClBC,MAAM,CAACM,aAAa,CAAC,CAACG,UAAU,CAAC,CAAC;MAClCT,MAAM,CAACO,QAAQ,CAAC,CAACH,IAAI,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC;EACJ,CAAC,EAAC;AACJ,CAAC,CAAC"}