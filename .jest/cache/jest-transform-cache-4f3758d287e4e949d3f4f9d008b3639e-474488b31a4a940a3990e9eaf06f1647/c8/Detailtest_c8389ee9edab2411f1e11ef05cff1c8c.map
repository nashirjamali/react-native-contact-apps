{"version":3,"names":["_getJestObj","mock","getContact","jest","fn","deleteContact","alert","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_reactNative2","_Detail","_contact","_testUtils","_jsxRuntime","_require","getContactMock","createTestProps","props","Object","assign","navigation","navigate","replace","describe","mockContact","id","firstName","lastName","age","photo","beforeEach","clearAllMocks","test","default","mockResolvedValueOnce","status","data","_renderWithProviders","renderWithProviders","jsx","route","key","name","params","getByText","getByLabelText","waitFor","expect","toHaveBeenCalledTimes","toBeTruthy","fireEvent","press","Alert","toHaveBeenCalledWith","text","style","isPreferred","onPress","any","Function","cancelable"],"sources":["Detail.test.tsx"],"sourcesContent":["import React from 'react';\nimport {fireEvent, waitFor} from '@testing-library/react-native';\nimport {Alert} from 'react-native';\nimport Detail from '../Detail';\nimport {getContact, deleteContact} from '../../apis/contact';\nimport {renderWithProviders} from '../../utils/test-utils';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport {RootStackParamList} from '../../types';\n\nlet getContactMock = getContact as jest.Mock;\n\njest.mock('../../apis/contact', () => ({\n  getContact: jest.fn(),\n  deleteContact: jest.fn(),\n}));\n\njest.mock('react-native/Libraries/Alert/Alert', () => ({\n  alert: jest.fn(),\n}));\n\ntype NavigationProps = StackNavigationProp<RootStackParamList, 'Detail'>;\n\nconst createTestProps = (props: Partial<NavigationProps>) => ({\n  navigation: {\n    navigate: jest.fn(),\n    replace: jest.fn(),\n    ...props,\n  } as NavigationProps,\n  ...props,\n});\n\ndescribe('Detail', () => {\n  const mockContact = {\n    id: '1',\n    firstName: 'John',\n    lastName: 'Doe',\n    age: 30,\n    photo: 'https://example.com/avatar.jpg',\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  test('renders contact details and triggers delete confirmation', async () => {\n    getContactMock.mockResolvedValueOnce({\n      status: 200,\n      data: {data: mockContact},\n    });\n\n    const props = createTestProps({});\n    const {getByText, getByLabelText} = renderWithProviders(\n      <Detail\n        route={{\n          key: 'Detail',\n          name: 'Detail',\n          params: {id: '1'},\n        }}\n        {...props}\n      />,\n    );\n\n    await waitFor(() => {\n      expect(getContact).toHaveBeenCalledTimes(1);\n    });\n\n    expect(getByText('Detail')).toBeTruthy();\n    expect(getByText('First Name')).toBeTruthy();\n    expect(getByText('John')).toBeTruthy();\n    expect(getByText('Last Name')).toBeTruthy();\n    expect(getByText('Doe')).toBeTruthy();\n    expect(getByText('Age')).toBeTruthy();\n    expect(getByText('30')).toBeTruthy();\n    expect(getByLabelText('Delete')).toBeTruthy();\n\n    fireEvent.press(getByLabelText('Delete'));\n\n    expect(Alert.alert).toHaveBeenCalledWith(\n      'Delete contact',\n      'Are you sure delete John Doe?',\n      [\n        {\n          text: 'Cancel',\n          style: 'cancel',\n          isPreferred: true,\n        },\n        {\n          text: 'Sure',\n          style: 'default',\n          isPreferred: false,\n          onPress: expect.any(Function),\n        },\n      ],\n      {\n        cancelable: true,\n      },\n    );\n  });\n\n  //   test('triggers delete action and navigates back after confirmation', async () => {\n  //     const navigation = {goBack: jest.fn()};\n  //     getContact.mockResolvedValueOnce({status: 200, data: {data: mockContact}});\n  //     deleteContact.mockResolvedValueOnce();\n  //     const {getByText} = render(\n  //       <Detail navigation={navigation} route={{params: {id: '1'}}} />,\n  //     );\n\n  //     await waitFor(() => {\n  //       expect(getContact).toHaveBeenCalledTimes(1);\n  //     });\n\n  //     fireEvent.press(getByText('Delete'));\n  //     const deleteButton = Alert.alert.mock.calls[0][2][1];\n  //     fireEvent.press(deleteButton.onPress);\n\n  //     await waitFor(() => {\n  //       expect(deleteContact).toHaveBeenCalledTimes(1);\n  //       expect(deleteContact).toHaveBeenCalledWith('1');\n  //       expect(navigation.goBack).toHaveBeenCalledTimes(1);\n  //     });\n  //   });\n});\n"],"mappings":"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"}