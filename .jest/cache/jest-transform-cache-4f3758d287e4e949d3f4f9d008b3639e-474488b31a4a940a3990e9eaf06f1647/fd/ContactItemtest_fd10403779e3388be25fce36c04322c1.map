{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_ContactItem","_jsxRuntime","describe","contact","firstName","lastName","photo","age","id","test","_asyncToGenerator2","default","jest","spyOn","global","mockResolvedValueOnce","Promise","resolve","ok","status","_render","render","jsx","getByText","getByTestId","waitFor","avatar","name","expect","props","children","toBe","toBeTruthy","onPressMock","fn","_render2","onPress","touchable","fireEvent","press","toHaveBeenCalled"],"sources":["ContactItem.test.tsx"],"sourcesContent":["import React from 'react';\nimport {render, fireEvent, waitFor} from '@testing-library/react-native';\nimport ContactItem from '../ContactItem';\n\ndescribe('ContactItem', () => {\n  const contact = {\n    firstName: 'John',\n    lastName: 'Doe',\n    photo: 'https://example.com/avatar.png',\n    age: 2,\n    id: '111',\n  };\n\n  test('renders correctly with contact data', async () => {\n    jest\n      .spyOn(global, 'fetch')\n      .mockResolvedValueOnce(\n        Promise.resolve({ok: true, status: 200} as Response),\n      );\n\n    const {getByText, getByTestId} = render(<ContactItem contact={contact} />);\n\n    await waitFor(() => {\n      const avatar = getByTestId('user-avatar-text');\n      const name = getByText('John Doe');\n\n      expect(avatar.props.children.props.children).toBe('JD');\n      expect(name).toBeTruthy();\n    });\n  });\n\n  test('calls onPress when pressed', () => {\n    const onPressMock = jest.fn();\n    const {getByTestId} = render(\n      <ContactItem contact={contact} onPress={onPressMock} />,\n    );\n\n    const touchable = getByTestId('user-avatar-text');\n    fireEvent.press(touchable);\n\n    expect(onPressMock).toHaveBeenCalled();\n  });\n});\n"],"mappings":";;AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,YAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAyC,IAAAG,WAAA,GAAAH,OAAA;AAEzCI,QAAQ,CAAC,aAAa,EAAE,YAAM;EAC5B,IAAMC,OAAO,GAAG;IACdC,SAAS,EAAE,MAAM;IACjBC,QAAQ,EAAE,KAAK;IACfC,KAAK,EAAE,gCAAgC;IACvCC,GAAG,EAAE,CAAC;IACNC,EAAE,EAAE;EACN,CAAC;EAEDC,IAAI,CAAC,qCAAqC,MAAAC,kBAAA,CAAAC,OAAA,EAAE,aAAY;IACtDC,IAAI,CACDC,KAAK,CAACC,MAAM,EAAE,OAAO,CAAC,CACtBC,qBAAqB,CACpBC,OAAO,CAACC,OAAO,CAAC;MAACC,EAAE,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAG,CAAa,CACrD,CAAC;IAEH,IAAAC,OAAA,GAAiC,IAAAC,mBAAM,EAAC,IAAApB,WAAA,CAAAqB,GAAA,EAACtB,YAAA,CAAAW,OAAW;QAACR,OAAO,EAAEA;MAAQ,CAAE,CAAC,CAAC;MAAnEoB,SAAS,GAAAH,OAAA,CAATG,SAAS;MAAEC,WAAW,GAAAJ,OAAA,CAAXI,WAAW;IAE7B,MAAM,IAAAC,oBAAO,EAAC,YAAM;MAClB,IAAMC,MAAM,GAAGF,WAAW,CAAC,kBAAkB,CAAC;MAC9C,IAAMG,IAAI,GAAGJ,SAAS,CAAC,UAAU,CAAC;MAElCK,MAAM,CAACF,MAAM,CAACG,KAAK,CAACC,QAAQ,CAACD,KAAK,CAACC,QAAQ,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;MACvDH,MAAM,CAACD,IAAI,CAAC,CAACK,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,EAAC;EAEFvB,IAAI,CAAC,4BAA4B,EAAE,YAAM;IACvC,IAAMwB,WAAW,GAAGrB,IAAI,CAACsB,EAAE,CAAC,CAAC;IAC7B,IAAAC,QAAA,GAAsB,IAAAd,mBAAM,EAC1B,IAAApB,WAAA,CAAAqB,GAAA,EAACtB,YAAA,CAAAW,OAAW;QAACR,OAAO,EAAEA,OAAQ;QAACiC,OAAO,EAAEH;MAAY,CAAE,CACxD,CAAC;MAFMT,WAAW,GAAAW,QAAA,CAAXX,WAAW;IAIlB,IAAMa,SAAS,GAAGb,WAAW,CAAC,kBAAkB,CAAC;IACjDc,sBAAS,CAACC,KAAK,CAACF,SAAS,CAAC;IAE1BT,MAAM,CAACK,WAAW,CAAC,CAACO,gBAAgB,CAAC,CAAC;EACxC,CAAC,CAAC;AACJ,CAAC,CAAC"}