{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_AvatarItem","_jsxRuntime","describe","imageURL","onSelectMock","jest","fn","afterEach","clearAllMocks","test","_render","render","jsx","default","onSelect","getByTestId","avatarImage","expect","props","source","uri","toBe","_render2","avatarContainer","fireEvent","press","toHaveBeenCalledTimes","_render3","isSelected","style","toContainEqual","borderColor","borderWidth"],"sources":["AvatarItem.test.tsx"],"sourcesContent":["import React from 'react';\nimport {render, fireEvent} from '@testing-library/react-native';\nimport AvatarItem from '../AvatarItem';\n\ndescribe('AvatarItem', () => {\n  const imageURL = 'https://example.com/avatar.jpg';\n  const onSelectMock = jest.fn();\n\n  afterEach(() => {\n    jest.clearAllMocks();\n  });\n\n  test('renders correctly', () => {\n    const {getByTestId} = render(\n      <AvatarItem imageURL={imageURL} onSelect={onSelectMock} />,\n    );\n    const avatarImage = getByTestId('avatar-image');\n    expect(avatarImage.props.source.uri).toBe(imageURL);\n  });\n\n  test('calls onSelect when pressed', () => {\n    const {getByTestId} = render(\n      <AvatarItem imageURL={imageURL} onSelect={onSelectMock} />,\n    );\n    const avatarContainer = getByTestId('avatar-container');\n    fireEvent.press(avatarContainer);\n    expect(onSelectMock).toHaveBeenCalledTimes(1);\n  });\n\n  test('renders with selected style when isSelected is true', () => {\n    const {getByTestId} = render(\n      <AvatarItem imageURL={imageURL} onSelect={onSelectMock} isSelected />,\n    );\n    const avatarImage = getByTestId('avatar-image');\n    expect(avatarImage.props.style).toContainEqual({\n      borderColor: '#1d4ed8',\n      borderWidth: 10,\n    });\n  });\n});\n"],"mappings":";AAAA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,YAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAuC,IAAAG,WAAA,GAAAH,OAAA;AAEvCI,QAAQ,CAAC,YAAY,EAAE,YAAM;EAC3B,IAAMC,QAAQ,GAAG,gCAAgC;EACjD,IAAMC,YAAY,GAAGC,IAAI,CAACC,EAAE,CAAC,CAAC;EAE9BC,SAAS,CAAC,YAAM;IACdF,IAAI,CAACG,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFC,IAAI,CAAC,mBAAmB,EAAE,YAAM;IAC9B,IAAAC,OAAA,GAAsB,IAAAC,mBAAM,EAC1B,IAAAV,WAAA,CAAAW,GAAA,EAACZ,WAAA,CAAAa,OAAU;QAACV,QAAQ,EAAEA,QAAS;QAACW,QAAQ,EAAEV;MAAa,CAAE,CAC3D,CAAC;MAFMW,WAAW,GAAAL,OAAA,CAAXK,WAAW;IAGlB,IAAMC,WAAW,GAAGD,WAAW,CAAC,cAAc,CAAC;IAC/CE,MAAM,CAACD,WAAW,CAACE,KAAK,CAACC,MAAM,CAACC,GAAG,CAAC,CAACC,IAAI,CAAClB,QAAQ,CAAC;EACrD,CAAC,CAAC;EAEFM,IAAI,CAAC,6BAA6B,EAAE,YAAM;IACxC,IAAAa,QAAA,GAAsB,IAAAX,mBAAM,EAC1B,IAAAV,WAAA,CAAAW,GAAA,EAACZ,WAAA,CAAAa,OAAU;QAACV,QAAQ,EAAEA,QAAS;QAACW,QAAQ,EAAEV;MAAa,CAAE,CAC3D,CAAC;MAFMW,WAAW,GAAAO,QAAA,CAAXP,WAAW;IAGlB,IAAMQ,eAAe,GAAGR,WAAW,CAAC,kBAAkB,CAAC;IACvDS,sBAAS,CAACC,KAAK,CAACF,eAAe,CAAC;IAChCN,MAAM,CAACb,YAAY,CAAC,CAACsB,qBAAqB,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC;EAEFjB,IAAI,CAAC,qDAAqD,EAAE,YAAM;IAChE,IAAAkB,QAAA,GAAsB,IAAAhB,mBAAM,EAC1B,IAAAV,WAAA,CAAAW,GAAA,EAACZ,WAAA,CAAAa,OAAU;QAACV,QAAQ,EAAEA,QAAS;QAACW,QAAQ,EAAEV,YAAa;QAACwB,UAAU;MAAA,CAAE,CACtE,CAAC;MAFMb,WAAW,GAAAY,QAAA,CAAXZ,WAAW;IAGlB,IAAMC,WAAW,GAAGD,WAAW,CAAC,cAAc,CAAC;IAC/CE,MAAM,CAACD,WAAW,CAACE,KAAK,CAACW,KAAK,CAAC,CAACC,cAAc,CAAC;MAC7CC,WAAW,EAAE,SAAS;MACtBC,WAAW,EAAE;IACf,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}