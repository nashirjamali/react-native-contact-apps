{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classCallCheck2","_createClass2","_get2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_normalizeColor","_PlatformColorValueTypes","_NativeAnimatedHelper","_AnimatedValue","_interopRequireWildcard","_AnimatedWithChildren2","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","constructor","Reflect","construct","arguments","apply","sham","Proxy","Boolean","valueOf","e","NativeAnimatedAPI","NativeAnimatedHelper","API","defaultColor","r","g","b","a","processColor","color","undefined","isRgbaValue","normalizedColor","normalizeColor","processedColorObj","processColorObject","isRgbaAnimatedValue","AnimatedValue","AnimatedColor","_AnimatedWithChildren","_super","valueIn","config","_this","_suspendCallbacks","rgbaAnimatedValue","_processColor","processedColor","initColor","nativeColor","useNativeDriver","__makeNative","setValue","_processColor2","_this2","shouldUpdateNodeConfig","__isNative","nativeTag","__getNativeTag","setWaitingForIdentifier","toString","_withSuspendedCallbacks","rgbaValue","updateAnimatedNodeConfig","__getNativeConfig","unsetWaitingForIdentifier","flushValue","__callListeners","__getValue","setOffset","offset","flattenOffset","extractOffset","stopAnimation","callback","resetAnimation","__attach","__addChild","__detach","__removeChild","platformConfig","type","AnimatedWithChildren"],"sources":["AnimatedColor.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {NativeColorValue} from '../../StyleSheet/PlatformColorValueTypes';\nimport type {ProcessedColorValue} from '../../StyleSheet/processColor';\nimport type {ColorValue} from '../../StyleSheet/StyleSheet';\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport normalizeColor from '../../StyleSheet/normalizeColor';\nimport {processColorObject} from '../../StyleSheet/PlatformColorValueTypes';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedValue, {flushValue} from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport type AnimatedColorConfig = $ReadOnly<{\n  useNativeDriver: boolean,\n}>;\n\ntype ColorListenerCallback = (value: ColorValue) => mixed;\n\nexport type RgbaValue = {\n  +r: number,\n  +g: number,\n  +b: number,\n  +a: number,\n  ...\n};\n\ntype RgbaAnimatedValue = {\n  +r: AnimatedValue,\n  +g: AnimatedValue,\n  +b: AnimatedValue,\n  +a: AnimatedValue,\n  ...\n};\n\nexport type InputValue = ?(RgbaValue | RgbaAnimatedValue | ColorValue);\n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\nconst defaultColor: RgbaValue = {r: 0, g: 0, b: 0, a: 1.0};\n\n/* eslint no-bitwise: 0 */\nfunction processColor(\n  color?: ?(ColorValue | RgbaValue),\n): ?(RgbaValue | NativeColorValue) {\n  if (color === undefined || color === null) {\n    return null;\n  }\n\n  if (isRgbaValue(color)) {\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    return (color: RgbaValue);\n  }\n\n  let normalizedColor: ?ProcessedColorValue = normalizeColor(\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    (color: ColorValue),\n  );\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    const processedColorObj: ?NativeColorValue =\n      processColorObject(normalizedColor);\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    const r: number = (normalizedColor & 0xff000000) >>> 24;\n    const g: number = (normalizedColor & 0x00ff0000) >>> 16;\n    const b: number = (normalizedColor & 0x0000ff00) >>> 8;\n    const a: number = (normalizedColor & 0x000000ff) / 255;\n\n    return {r, g, b, a};\n  }\n\n  return null;\n}\n\nfunction isRgbaValue(value: any): boolean {\n  return (\n    value &&\n    typeof value.r === 'number' &&\n    typeof value.g === 'number' &&\n    typeof value.b === 'number' &&\n    typeof value.a === 'number'\n  );\n}\n\nfunction isRgbaAnimatedValue(value: any): boolean {\n  return (\n    value &&\n    value.r instanceof AnimatedValue &&\n    value.g instanceof AnimatedValue &&\n    value.b instanceof AnimatedValue &&\n    value.a instanceof AnimatedValue\n  );\n}\n\nexport default class AnimatedColor extends AnimatedWithChildren {\n  r: AnimatedValue;\n  g: AnimatedValue;\n  b: AnimatedValue;\n  a: AnimatedValue;\n  nativeColor: ?NativeColorValue;\n\n  _suspendCallbacks: number = 0;\n\n  constructor(valueIn?: InputValue, config?: ?AnimatedColorConfig) {\n    super();\n\n    let value: RgbaValue | RgbaAnimatedValue | ColorValue =\n      valueIn ?? defaultColor;\n    if (isRgbaAnimatedValue(value)) {\n      // $FlowIgnore[incompatible-cast] - Type is verified above\n      const rgbaAnimatedValue: RgbaAnimatedValue = (value: RgbaAnimatedValue);\n      this.r = rgbaAnimatedValue.r;\n      this.g = rgbaAnimatedValue.g;\n      this.b = rgbaAnimatedValue.b;\n      this.a = rgbaAnimatedValue.a;\n    } else {\n      const processedColor: RgbaValue | NativeColorValue =\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        processColor((value: ColorValue | RgbaValue)) ?? defaultColor;\n      let initColor: RgbaValue = defaultColor;\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        initColor = (processedColor: RgbaValue);\n      } else {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        this.nativeColor = (processedColor: NativeColorValue);\n      }\n\n      this.r = new AnimatedValue(initColor.r);\n      this.g = new AnimatedValue(initColor.g);\n      this.b = new AnimatedValue(initColor.b);\n      this.a = new AnimatedValue(initColor.a);\n    }\n\n    if (config?.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   */\n  setValue(value: RgbaValue | ColorValue): void {\n    let shouldUpdateNodeConfig = false;\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n    }\n\n    const processedColor: RgbaValue | NativeColorValue =\n      processColor(value) ?? defaultColor;\n    this._withSuspendedCallbacks(() => {\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-type] - Type is verified above\n        const rgbaValue: RgbaValue = processedColor;\n        this.r.setValue(rgbaValue.r);\n        this.g.setValue(rgbaValue.g);\n        this.b.setValue(rgbaValue.b);\n        this.a.setValue(rgbaValue.a);\n        if (this.nativeColor != null) {\n          this.nativeColor = null;\n          shouldUpdateNodeConfig = true;\n        }\n      } else {\n        // $FlowIgnore[incompatible-type] - Type is verified above\n        const nativeColor: NativeColorValue = processedColor;\n        if (this.nativeColor !== nativeColor) {\n          this.nativeColor = nativeColor;\n          shouldUpdateNodeConfig = true;\n        }\n      }\n    });\n\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      if (shouldUpdateNodeConfig) {\n        NativeAnimatedAPI.updateAnimatedNodeConfig(\n          nativeTag,\n          this.__getNativeConfig(),\n        );\n      }\n      NativeAnimatedAPI.unsetWaitingForIdentifier(nativeTag.toString());\n    } else {\n      flushValue(this);\n    }\n\n    // $FlowFixMe[incompatible-call]\n    this.__callListeners(this.__getValue());\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   */\n  setOffset(offset: RgbaValue): void {\n    this.r.setOffset(offset.r);\n    this.g.setOffset(offset.g);\n    this.b.setOffset(offset.b);\n    this.a.setOffset(offset.a);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   */\n  flattenOffset(): void {\n    this.r.flattenOffset();\n    this.g.flattenOffset();\n    this.b.flattenOffset();\n    this.a.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   */\n  extractOffset(): void {\n    this.r.extractOffset();\n    this.g.extractOffset();\n    this.b.extractOffset();\n    this.a.extractOffset();\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   */\n  stopAnimation(callback?: ColorListenerCallback): void {\n    this.r.stopAnimation();\n    this.g.stopAnimation();\n    this.b.stopAnimation();\n    this.a.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   */\n  resetAnimation(callback?: ColorListenerCallback): void {\n    this.r.resetAnimation();\n    this.g.resetAnimation();\n    this.b.resetAnimation();\n    this.a.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  __getValue(): ColorValue {\n    if (this.nativeColor != null) {\n      return this.nativeColor;\n    } else {\n      return `rgba(${this.r.__getValue()}, ${this.g.__getValue()}, ${this.b.__getValue()}, ${this.a.__getValue()})`;\n    }\n  }\n\n  __attach(): void {\n    this.r.__addChild(this);\n    this.g.__addChild(this);\n    this.b.__addChild(this);\n    this.a.__addChild(this);\n    super.__attach();\n  }\n\n  __detach(): void {\n    this.r.__removeChild(this);\n    this.g.__removeChild(this);\n    this.b.__removeChild(this);\n    this.a.__removeChild(this);\n    super.__detach();\n  }\n\n  _withSuspendedCallbacks(callback: () => void) {\n    this._suspendCallbacks++;\n    callback();\n    this._suspendCallbacks--;\n  }\n\n  __callListeners(value: number): void {\n    if (this._suspendCallbacks === 0) {\n      super.__callListeners(value);\n    }\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this.r.__makeNative(platformConfig);\n    this.g.__makeNative(platformConfig);\n    this.b.__makeNative(platformConfig);\n    this.a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig(): {...} {\n    return {\n      type: 'color',\n      r: this.r.__getNativeTag(),\n      g: this.g.__getNativeTag(),\n      b: this.b.__getNativeTag(),\n      a: this.a.__getNativeTag(),\n      nativeColor: this.nativeColor,\n    };\n  }\n}\n"],"mappings":"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"}