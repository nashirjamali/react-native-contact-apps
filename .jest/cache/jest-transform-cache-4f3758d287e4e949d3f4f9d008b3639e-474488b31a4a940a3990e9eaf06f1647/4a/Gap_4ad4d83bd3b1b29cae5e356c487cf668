e7cd0e442c0d03ae2db5a314011e7e96
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Gap;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _jsxRuntime = require("react/jsx-runtime");
function cov_1p64c0z9k0() {
  var path = "D:\\riset\\ReactNative\\ContactApps\\src\\components\\Gap.tsx";
  var hash = "213c0abe9527c04fc621e981c93424069bbae3eb";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "D:\\riset\\ReactNative\\ContactApps\\src\\components\\Gap.tsx",
    statementMap: {
      "0": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 10,
          column: 66
        }
      }
    },
    fnMap: {
      "0": {
        name: "Gap",
        decl: {
          start: {
            line: 9,
            column: 24
          },
          end: {
            line: 9,
            column: 27
          }
        },
        loc: {
          start: {
            line: 9,
            column: 54
          },
          end: {
            line: 11,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 9,
            column: 29
          },
          end: {
            line: 9,
            column: 34
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 33
          },
          end: {
            line: 9,
            column: 34
          }
        }],
        line: 9
      },
      "1": {
        loc: {
          start: {
            line: 9,
            column: 36
          },
          end: {
            line: 9,
            column: 41
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 9,
            column: 40
          },
          end: {
            line: 9,
            column: 41
          }
        }],
        line: 9
      }
    },
    s: {
      "0": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0],
      "1": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "213c0abe9527c04fc621e981c93424069bbae3eb"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    cov_1p64c0z9k0 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1p64c0z9k0();
function Gap(_ref) {
  var _ref$x = _ref.x,
    x = _ref$x === void 0 ? (cov_1p64c0z9k0().b[0][0]++, 0) : _ref$x,
    _ref$y = _ref.y,
    y = _ref$y === void 0 ? (cov_1p64c0z9k0().b[1][0]++, 0) : _ref$y;
  cov_1p64c0z9k0().f[0]++;
  cov_1p64c0z9k0().s[0]++;
  return (0, _jsxRuntime.jsx)(_reactNative.View, {
    style: {
      width: x,
      height: y
    },
    testID: "gap-view"
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9qc3hSdW50aW1lIiwiY292XzFwNjRjMHo5azAiLCJwYXRoIiwiaGFzaCIsImdsb2JhbCIsIkZ1bmN0aW9uIiwiZ2N2IiwiY292ZXJhZ2VEYXRhIiwic3RhdGVtZW50TWFwIiwic3RhcnQiLCJsaW5lIiwiY29sdW1uIiwiZW5kIiwiZm5NYXAiLCJuYW1lIiwiZGVjbCIsImxvYyIsImJyYW5jaE1hcCIsInR5cGUiLCJsb2NhdGlvbnMiLCJzIiwiZiIsImIiLCJfY292ZXJhZ2VTY2hlbWEiLCJjb3ZlcmFnZSIsImFjdHVhbENvdmVyYWdlIiwiR2FwIiwiX3JlZiIsIl9yZWYkeCIsIngiLCJfcmVmJHkiLCJ5IiwianN4IiwiVmlldyIsInN0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJ0ZXN0SUQiXSwic291cmNlcyI6WyJHYXAudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQge1ZpZXd9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbnR5cGUgR2FwUHJvcHMgPSB7XG4gIHg/OiBudW1iZXI7XG4gIHk/OiBudW1iZXI7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHYXAoe3ggPSAwLCB5ID0gMH06IEdhcFByb3BzKSB7XG4gIHJldHVybiA8VmlldyBzdHlsZT17e3dpZHRoOiB4LCBoZWlnaHQ6IHl9fSB0ZXN0SUQ9XCJnYXAtdmlld1wiIC8+O1xufVxuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUFrQyxJQUFBRSxXQUFBLEdBQUFGLE9BQUE7QUFBQSxTQUFBRyxlQUFBO0VBQUEsSUFBQUMsSUFBQTtFQUFBLElBQUFDLElBQUE7RUFBQSxJQUFBQyxNQUFBLE9BQUFDLFFBQUE7RUFBQSxJQUFBQyxHQUFBO0VBQUEsSUFBQUMsWUFBQTtJQUFBTCxJQUFBO0lBQUFNLFlBQUE7TUFBQTtRQUFBQyxLQUFBO1VBQUFDLElBQUE7VUFBQUMsTUFBQTtRQUFBO1FBQUFDLEdBQUE7VUFBQUYsSUFBQTtVQUFBQyxNQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUFFLEtBQUE7TUFBQTtRQUFBQyxJQUFBO1FBQUFDLElBQUE7VUFBQU4sS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUssR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBRCxJQUFBO01BQUE7SUFBQTtJQUFBTyxTQUFBO01BQUE7UUFBQUQsR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO01BQUE7UUFBQU0sR0FBQTtVQUFBUCxLQUFBO1lBQUFDLElBQUE7WUFBQUMsTUFBQTtVQUFBO1VBQUFDLEdBQUE7WUFBQUYsSUFBQTtZQUFBQyxNQUFBO1VBQUE7UUFBQTtRQUFBTyxJQUFBO1FBQUFDLFNBQUE7VUFBQVYsS0FBQTtZQUFBQyxJQUFBO1lBQUFDLE1BQUE7VUFBQTtVQUFBQyxHQUFBO1lBQUFGLElBQUE7WUFBQUMsTUFBQTtVQUFBO1FBQUE7UUFBQUQsSUFBQTtNQUFBO0lBQUE7SUFBQVUsQ0FBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO0lBQUE7SUFBQUMsQ0FBQTtNQUFBO01BQUE7SUFBQTtJQUFBQyxlQUFBO0lBQUFwQixJQUFBO0VBQUE7RUFBQSxJQUFBcUIsUUFBQSxHQUFBcEIsTUFBQSxDQUFBRSxHQUFBLE1BQUFGLE1BQUEsQ0FBQUUsR0FBQTtFQUFBLEtBQUFrQixRQUFBLENBQUF0QixJQUFBLEtBQUFzQixRQUFBLENBQUF0QixJQUFBLEVBQUFDLElBQUEsS0FBQUEsSUFBQTtJQUFBcUIsUUFBQSxDQUFBdEIsSUFBQSxJQUFBSyxZQUFBO0VBQUE7RUFBQSxJQUFBa0IsY0FBQSxHQUFBRCxRQUFBLENBQUF0QixJQUFBO0VBQUE7SUFBQUQsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQXdCLGNBQUE7SUFBQTtFQUFBO0VBQUEsT0FBQUEsY0FBQTtBQUFBO0FBQUF4QixjQUFBO0FBT25CLFNBQVN5QixHQUFHQSxDQUFBQyxJQUFBLEVBQTJCO0VBQUEsSUFBQUMsTUFBQSxHQUFBRCxJQUFBLENBQXpCRSxDQUFDO0lBQURBLENBQUMsR0FBQUQsTUFBQSxlQUFBM0IsY0FBQSxHQUFBcUIsQ0FBQSxVQUFHLENBQUMsSUFBQU0sTUFBQTtJQUFBRSxNQUFBLEdBQUFILElBQUEsQ0FBRUksQ0FBQztJQUFEQSxDQUFDLEdBQUFELE1BQUEsZUFBQTdCLGNBQUEsR0FBQXFCLENBQUEsVUFBRyxDQUFDLElBQUFRLE1BQUE7RUFBQTdCLGNBQUEsR0FBQW9CLENBQUE7RUFBQXBCLGNBQUEsR0FBQW1CLENBQUE7RUFDdkMsT0FBTyxJQUFBcEIsV0FBQSxDQUFBZ0MsR0FBQSxFQUFDakMsWUFBQSxDQUFBa0MsSUFBSTtJQUFDQyxLQUFLLEVBQUU7TUFBQ0MsS0FBSyxFQUFFTixDQUFDO01BQUVPLE1BQU0sRUFBRUw7SUFBQyxDQUFFO0lBQUNNLE1BQU0sRUFBQztFQUFVLENBQUUsQ0FBQztBQUNqRSJ9