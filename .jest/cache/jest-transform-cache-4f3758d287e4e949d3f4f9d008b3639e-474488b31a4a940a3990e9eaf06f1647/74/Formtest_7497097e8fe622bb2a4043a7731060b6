2b1ebcbb03f793689c99f44049274e6c
_getJestObj().mock('@react-navigation/native', function () {
  return Object.assign({}, jest.requireActual('@react-navigation/native'), {
    useIsFocused: jest.fn()
  });
});
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("@testing-library/react-native");
var _Form = _interopRequireDefault(require("../Form"));
var _testUtils = require("../../utils/test-utils");
var _jsxRuntime = require("react/jsx-runtime");
function _getJestObj() {
  var _require = require("@jest/globals"),
    jest = _require.jest;
  _getJestObj = function _getJestObj() {
    return jest;
  };
  return jest;
}
var createTestProps = function createTestProps(props) {
  return Object.assign({
    navigation: Object.assign({
      navigate: jest.fn()
    }, props)
  }, props);
};
describe('Form', function () {
  test('renders correctly and enables next button when form is complete', (0, _asyncToGenerator2.default)(function* () {
    var props = createTestProps({});
    var _renderWithProviders = (0, _testUtils.renderWithProviders)((0, _jsxRuntime.jsx)(_Form.default, Object.assign({
        route: {
          key: 'Form',
          name: 'Form',
          params: {
            isEdit: false
          }
        }
      }, props))),
      getByPlaceholderText = _renderWithProviders.getByPlaceholderText,
      getByLabelText = _renderWithProviders.getByLabelText;
    var firstNameInput = getByPlaceholderText('First Name');
    var lastNameInput = getByPlaceholderText('Last Name');
    var ageInput = getByPlaceholderText('Age');
    var nextButton = getByLabelText('button-next');
    _reactNative.fireEvent.changeText(firstNameInput, 'John');
    _reactNative.fireEvent.changeText(lastNameInput, 'Doe');
    _reactNative.fireEvent.changeText(ageInput, '30');
    expect(firstNameInput.props.value).toBe('John');
    expect(lastNameInput.props.value).toBe('Doe');
    expect(ageInput.props.value).toBe('30');
    expect(nextButton.props.accessibilityState.disabled).toBe(false);
  }));
  test('navigates to ChooseAvatar screen when Next button is clicked', (0, _asyncToGenerator2.default)(function* () {
    var props = createTestProps({});
    var _renderWithProviders2 = (0, _testUtils.renderWithProviders)((0, _jsxRuntime.jsx)(_Form.default, Object.assign({
        route: {
          key: 'Form',
          name: 'Form',
          params: {
            isEdit: false
          }
        }
      }, props))),
      getByPlaceholderText = _renderWithProviders2.getByPlaceholderText,
      getByLabelText = _renderWithProviders2.getByLabelText;
    yield (0, _reactNative.waitFor)(function () {
      expect(getByPlaceholderText('First Name')).toBeTruthy();
      expect(getByPlaceholderText('Last Name')).toBeTruthy();
      expect(getByPlaceholderText('Age')).toBeTruthy();
      expect(getByLabelText('button-next')).toBeTruthy();
    });
    _reactNative.fireEvent.changeText(getByPlaceholderText('First Name'), 'John');
    _reactNative.fireEvent.changeText(getByPlaceholderText('Last Name'), 'Doe');
    _reactNative.fireEvent.changeText(getByPlaceholderText('Age'), '30');
    _reactNative.fireEvent.press(getByLabelText('button-next'));
    yield (0, _reactNative.waitFor)(function () {
      expect(props.navigation.navigate).toHaveBeenCalledWith('ChooseAvatar', {
        isEdit: false
      });
    });
  }));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,