{"version":3,"names":["_getJestObj","mock","getContacts","jest","fn","Object","assign","requireActual","useIsFocused","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_List","_contact","_jsxRuntime","_require","createTestProps","props","navigation","navigate","describe","test","default","mockContacts","id","firstName","lastName","age","photo","mockedGetContacts","mockResolvedValueOnce","data","status","_render","render","jsx","route","key","name","getByText","screen","debug","waitFor","expect","toBeTruthy","toHaveBeenCalledTimes"],"sources":["List.test.tsx"],"sourcesContent":["import React from 'react';\nimport {render, screen, waitFor} from '@testing-library/react-native';\nimport List from '../List';\nimport {getContacts} from '../../apis/contact';\nimport {AxiosResponse} from 'axios';\nimport {StackNavigationProp} from '@react-navigation/stack';\nimport {RootStackParamList} from '../../types';\nimport {renderWithProviders} from '../../utils/test-utils';\n\njest.mock('../../apis/contact', () => ({\n  getContacts: jest.fn(),\n}));\n\njest.mock('@react-navigation/native', () => ({\n  ...jest.requireActual('@react-navigation/native'),\n  useIsFocused: jest.fn(),\n}));\n\ntype NavigationProps = StackNavigationProp<RootStackParamList, 'List'>;\n\nconst createTestProps = (props: Partial<NavigationProps>) => ({\n  navigation: {\n    navigate: jest.fn(),\n    ...props,\n  } as NavigationProps,\n  ...props,\n});\n\ndescribe('List', () => {\n  test('renders correctly and fetches contacts', async () => {\n    const mockContacts = [\n      {id: '111', firstName: 'John', lastName: 'Doe', age: 20, photo: ''},\n      {id: '222', firstName: 'Jane', lastName: 'Smith', age: 20, photo: ''},\n    ];\n    const mockedGetContacts = getContacts as jest.MockedFunction<\n      typeof getContacts\n    >;\n    mockedGetContacts.mockResolvedValueOnce({\n      data: {data: mockContacts},\n      status: 200,\n    } as AxiosResponse);\n\n    const props = createTestProps({});\n    const {getByText} = render(\n      <List route={{key: 'List', name: 'List'}} {...props} />,\n    );\n\n    screen.debug();\n\n    await waitFor(() => {\n      expect(getByText('Contact')).toBeTruthy();\n      expect(getByText('John Doe')).toBeTruthy();\n      expect(getByText('Jane Smith')).toBeTruthy();\n    });\n\n    // Verify that getContacts is called\n    expect(getContacts).toHaveBeenCalledTimes(1);\n  });\n\n  //   test('displays error message when fetching contacts fails', async () => {\n  //     getContacts.mockResolvedValueOnce({\n  //       data: null,\n  //       status: 500,\n  //     });\n\n  //     const {getByText} = render(<List />);\n\n  //     // Loading state is displayed initially\n  //     expect(getByText('Loading...')).toBeTruthy();\n\n  //     // Wait for error message to be displayed\n  //     await waitFor(() => {\n  //       expect(getByText('Error')).toBeTruthy();\n  //       expect(getByText('something went wrong')).toBeTruthy();\n  //     });\n\n  //     // Verify that getContacts is called\n  //     expect(getContacts).toHaveBeenCalledTimes(1);\n  //   });\n});\n"],"mappings":"AASAA,WAAA,GAAKC,IAAI,CAAC,oBAAoB,EAAE;EAAA,OAAO;IACrCC,WAAW,EAAEC,IAAI,CAACC,EAAE,CAAC;EACvB,CAAC;AAAA,CAAC,CAAC;AAEHJ,WAAA,GAAKC,IAAI,CAAC,0BAA0B,EAAE;EAAA,OAAAI,MAAA,CAAAC,MAAA,KACjCH,IAAI,CAACI,aAAa,CAAC,0BAA0B,CAAC;IACjDC,YAAY,EAAEL,IAAI,CAACC,EAAE,CAAC;EAAC;AAAA,CACvB,CAAC;AAAC,IAAAK,sBAAA,GAAAC,OAAA;AAAA,IAAAC,kBAAA,GAAAF,sBAAA,CAAAC,OAAA;AAhBJ,IAAAE,MAAA,GAAAH,sBAAA,CAAAC,OAAA;AACA,IAAAG,YAAA,GAAAH,OAAA;AACA,IAAAI,KAAA,GAAAL,sBAAA,CAAAC,OAAA;AACA,IAAAK,QAAA,GAAAL,OAAA;AAA+C,IAAAM,WAAA,GAAAN,OAAA;AAAA,SAAAV,YAAA;EAAA,IAAAiB,QAAA,GAAAP,OAAA;IAAAP,IAAA,GAAAc,QAAA,CAAAd,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAiB/C,IAAMe,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,KAA+B;EAAA,OAAAd,MAAA,CAAAC,MAAA;IACtDc,UAAU,EAAAf,MAAA,CAAAC,MAAA;MACRe,QAAQ,EAAElB,IAAI,CAACC,EAAE,CAAC;IAAC,GAChBe,KAAK;EACU,GACjBA,KAAK;AAAA,CACR;AAEFG,QAAQ,CAAC,MAAM,EAAE,YAAM;EACrBC,IAAI,CAAC,wCAAwC,MAAAZ,kBAAA,CAAAa,OAAA,EAAE,aAAY;IACzD,IAAMC,YAAY,GAAG,CACnB;MAACC,EAAE,EAAE,KAAK;MAAEC,SAAS,EAAE,MAAM;MAAEC,QAAQ,EAAE,KAAK;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAE,CAAC,EACnE;MAACJ,EAAE,EAAE,KAAK;MAAEC,SAAS,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAE,CAAC,CACtE;IACD,IAAMC,iBAAiB,GAAG7B,oBAEzB;IACD6B,iBAAiB,CAACC,qBAAqB,CAAC;MACtCC,IAAI,EAAE;QAACA,IAAI,EAAER;MAAY,CAAC;MAC1BS,MAAM,EAAE;IACV,CAAkB,CAAC;IAEnB,IAAMf,KAAK,GAAGD,eAAe,CAAC,CAAC,CAAC,CAAC;IACjC,IAAAiB,OAAA,GAAoB,IAAAC,mBAAM,EACxB,IAAApB,WAAA,CAAAqB,GAAA,EAACvB,KAAA,CAAAU,OAAI,EAAAnB,MAAA,CAAAC,MAAA;QAACgC,KAAK,EAAE;UAACC,GAAG,EAAE,MAAM;UAAEC,IAAI,EAAE;QAAM;MAAE,GAAKrB,KAAK,CAAG,CACxD,CAAC;MAFMsB,SAAS,GAAAN,OAAA,CAATM,SAAS;IAIhBC,mBAAM,CAACC,KAAK,CAAC,CAAC;IAEd,MAAM,IAAAC,oBAAO,EAAC,YAAM;MAClBC,MAAM,CAACJ,SAAS,CAAC,SAAS,CAAC,CAAC,CAACK,UAAU,CAAC,CAAC;MACzCD,MAAM,CAACJ,SAAS,CAAC,UAAU,CAAC,CAAC,CAACK,UAAU,CAAC,CAAC;MAC1CD,MAAM,CAACJ,SAAS,CAAC,YAAY,CAAC,CAAC,CAACK,UAAU,CAAC,CAAC;IAC9C,CAAC,CAAC;IAGFD,MAAM,CAAC3C,oBAAW,CAAC,CAAC6C,qBAAqB,CAAC,CAAC,CAAC;EAC9C,CAAC,EAAC;AAsBJ,CAAC,CAAC"}